<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker在Linux的安装部署</title>
      <link href="/2024/11/07/linux/docker-1/"/>
      <url>/2024/11/07/linux/docker-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>最近接触了Docker的安装部署，借此机会记录一下， 方便后续的使用。</p><blockquote><p>虚拟机环境：VM 17pro、CentOS 7；</p></blockquote><h2 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h2><p>1、保证能ping通外网，如果不能ping通，可以看下虚拟机网络、网络配置、本机Ip配置等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p>2、备份当前yum源配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p>3、从阿里云下载新的CentOS7镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>4、清空并重新生成缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>1、安装必要工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>2、移除旧的Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure><p>3、添加阿里云的镜像地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>4、下载Docker相关软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y  docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><blockquote><p>ps：如果安装不了，编辑etc/resolv.conf文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">search localdomain</span><br><span class="line"></span><br><span class="line">5、Docker基本命令</span><br><span class="line"></span><br><span class="line">~~~shell</span><br><span class="line">//启动docker</span><br><span class="line">systemctl start docker</span><br><span class="line">//查看docker版本</span><br><span class="line">docker -v</span><br><span class="line">//查看docker镜像</span><br><span class="line">docker images</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line"><span class="params">##</span> 设置Docker镜像加速</span><br><span class="line"></span><br><span class="line">·1、创建目录</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">mkdir -p /etc/docker</span><br></pre></td></tr></table></figure></blockquote><p>2、设置加速地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://docker.m.daocloud.io&quot;,</span><br><span class="line">        &quot;https://huecker.io&quot;,</span><br><span class="line">        &quot;https://dockerhub.timeweb.cloud&quot;,</span><br><span class="line">        &quot;https://noohub.ru&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>ps：加速地址有时候会失效，可能会拉取不了镜像。可以网上找最新的加速地址或者访问<a href="https://xuanyuan.me/blog/archives/1154">加速地址: https://xuanyuan.me/blog/archives/1154</a></p></blockquote><p>3、重新加载配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>4、重启docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="安装软件（拉取镜像）"><a href="#安装软件（拉取镜像）" class="headerlink" title="安装软件（拉取镜像）"></a>安装软件（拉取镜像）</h2><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>1、拉取MySQL8的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:8.0.30</span><br></pre></td></tr></table></figure><p>2、创建容器并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name analldocker_mysql --restart=always -v /home/ljaer/mysql:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:8.0.30</span><br></pre></td></tr></table></figure><blockquote><p>PS：—restart=always    总是启动</p><p>-e MYSQL_ROOT_PASSWORD=root  密码为root</p><p>最后一定要指定版本号，不然就会重新拉取一个默认镜像</p></blockquote><p>3、进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it analldocker_mysql /bin/bash</span><br></pre></td></tr></table></figure><p>输入以下密码进入MySQL，密码root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><p>1、拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis:7.0.10</span><br></pre></td></tr></table></figure><p>2、创建容器并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=analldocker_redis -d -p 6379:6379  --restart=always redis:7.0.10</span><br></pre></td></tr></table></figure><h3 id="安装nacos"><a href="#安装nacos" class="headerlink" title="安装nacos"></a>安装nacos</h3><p>1、拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nacos/nacos-server:v2.1.1</span><br></pre></td></tr></table></figure><p>2、创建容器并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-p 8848:8848 \</span><br><span class="line">-p 9848:9848 \</span><br><span class="line">-p 9849:9849 \</span><br><span class="line">--name nacos2.1.1 \</span><br><span class="line">--restart=always \</span><br><span class="line">nacos/nacos-server:v2.1.1</span><br></pre></td></tr></table></figure><p>3、浏览器输入<a href="http://192.168.28.170:8848/nacos">http://虚拟机服务器的ip地址:8848/nacos</a> 即可访问nacos配置中心，密码都是nacos</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行方式部署Springboot+Vue项目</title>
      <link href="/2024/11/07/linux/prod/"/>
      <url>/2024/11/07/linux/prod/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>​        在之前贪图方便，个人项目都是使用宝塔进行部署，很无脑，也很便捷。出于个人学习，本次重置云服务系统，使用centerOS7从零安装部署项目。  </p><p>​        在正式部署前，请确保你已经阅读过<a href="https://blog.shibalover.love/2024/08/15/linux/base/">Linux 命令行安装 springboot 项目基本运行环境 | 阿良的博客 (shibalover.love)</a>，安装基本的运行环境</p><h2 id="二、项目打包"><a href="#二、项目打包" class="headerlink" title="二、项目打包"></a>二、项目打包</h2><h3 id="2-1-后端打包"><a href="#2-1-后端打包" class="headerlink" title="2.1 后端打包"></a>2.1 后端打包</h3><ul><li>修改打包方式，将依赖包、配置文件分离处理，具体方式看<a href="https://blog.shibalover.love/2024/07/25/backend/maven/maven-2/">Maven主包体积优化 | 阿良的博客 (shibalover.love)</a></li><li>找到idea右边的maven，点击打开后，找到主模块，点击跳过测试、clear、package完成打包</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/17/20240817-160058.png" alt="image-20240817160055408"></p><ul><li>添加生产配置文件：新建application-pro.yml生产配置文件，在里面设置你的线上的数据库、redis等配置</li><li>修改主配置文件，使用生产配置文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-system</span>    <span class="comment"># 配置当前spring应用名称</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">pro</span>  <span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="2-2-前端打包"><a href="#2-2-前端打包" class="headerlink" title="2.2 前端打包"></a>2.2 前端打包</h3><h3 id="2-2-1-在根目录添加-env-production文件，添加以下内容"><a href="#2-2-1-在根目录添加-env-production文件，添加以下内容" class="headerlink" title="2.2.1 在根目录添加.env.production文件，添加以下内容"></a>2.2.1 在根目录添加.env.production文件，添加以下内容</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 代理前缀</span><br><span class="line">VITE_APP_BASE_API = &#x27;/prod-api&#x27;</span><br></pre></td></tr></table></figure><h3 id="2-2-2-设置后端请求基本路径，项目部署用到反向代理，因此基础路径就是-‘-prod-api’"><a href="#2-2-2-设置后端请求基本路径，项目部署用到反向代理，因此基础路径就是-‘-prod-api’" class="headerlink" title="2.2.2 设置后端请求基本路径，项目部署用到反向代理，因此基础路径就是 ‘/prod-api’"></a>2.2.2 设置后端请求基本路径，项目部署用到反向代理，因此基础路径就是 ‘/prod-api’</h3><h3 id="2-2-3-编译打包"><a href="#2-2-3-编译打包" class="headerlink" title="2.2.3 编译打包"></a>2.2.3 编译打包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue run build</span><br></pre></td></tr></table></figure><h3 id="2-3上传文件"><a href="#2-3上传文件" class="headerlink" title="2.3上传文件"></a>2.3上传文件</h3><p>服务器新建/root/wwwroot目录，并使用xftp上传文件至该目录</p><p>上传的文件有</p><ul><li>后端 （在主运行模块的target目录下）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lib --打包后的依赖包</span><br><span class="line">xxx.jar -- 项目主包</span><br><span class="line">config  -- 需要创建的目录</span><br><span class="line"> - application.yml -- 配置文件用于指定使用哪个配置文件，这里使用pro配置文件</span><br><span class="line"> - application-pro.yml --生产环境配置文件</span><br></pre></td></tr></table></figure><ul><li>前端（在根目录下）</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist --打包后的文件目录</span><br></pre></td></tr></table></figure><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/17/20240817-161434.png" alt="image-20240817161433657"></p><h2 id="三、项目部署"><a href="#三、项目部署" class="headerlink" title="三、项目部署"></a>三、项目部署</h2><h3 id="3-1-后端部署"><a href="#3-1-后端部署" class="headerlink" title="3.1 后端部署"></a>3.1 后端部署</h3><p>进入/root/wwwroot目录，</p><p>运行以下命令，启动后端并在后台运行，指定日志文件为msg.log</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar aliang-tv.jar &gt; msg.log &amp;</span><br></pre></td></tr></table></figure><h3 id="3-2-前端部署"><a href="#3-2-前端部署" class="headerlink" title="3.2 前端部署"></a>3.2 前端部署</h3><h4 id="3-2-1-使用文件编辑器连接服务器（这里以虚拟机为例）"><a href="#3-2-1-使用文件编辑器连接服务器（这里以虚拟机为例）" class="headerlink" title="3.2.1 使用文件编辑器连接服务器（这里以虚拟机为例）"></a>3.2.1 使用文件编辑器连接服务器（这里以虚拟机为例）</h4><blockquote><p> 这里使用EditPlus编辑软件编辑配置文件，下载链接：<a href="https://pan.baidu.com/s/16cE-PXw01XYZJiQVH_KEWA?pwd=0328">https://pan.baidu.com/s/16cE-PXw01XYZJiQVH_KEWA?pwd=0328</a> </p></blockquote><ul><li>1、使用EditPlus连接虚拟机</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/16/20240816-111419.png" alt="image-20240815152548496"></p><ul><li>2、配置连接</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/16/20240816-111420.png" alt="image-20240815153114186"></p><ul><li>3、选择服务器</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/17/20240817-162407.png" alt="image-20240817162406595"></p><h4 id="3-2-2-使用EditPlus打开nginx配置文件"><a href="#3-2-2-使用EditPlus打开nginx配置文件" class="headerlink" title="3.2.2 使用EditPlus打开nginx配置文件"></a>3.2.2 使用EditPlus打开nginx配置文件</h4><ul><li>1、选择<strong>/usr/local/nginx/conf/nginx.conf</strong> 文件</li><li>2、修改顶部的user为root</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">user  root;</span><br></pre></td></tr></table></figure><ul><li>3、在http里设置server</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"># 需要被监听的端口号，前提是此端口号没有被占用，否则在重启 Nginx 时会报错</span><br><span class="line">listen       80;</span><br><span class="line"># 服务名称，无所谓</span><br><span class="line">server_name  localhost;</span><br><span class="line"></span><br><span class="line"># 根请求会指向的页面</span><br><span class="line">location / &#123;</span><br><span class="line"># 此处的 @router 实际上是引用下面的转发，否则在 Vue 路由刷新时可能会抛出 404</span><br><span class="line">root /root/wwwroot/dist;</span><br><span class="line"># 请求指向的首页</span><br><span class="line">index index.html;</span><br><span class="line">try_files $uri $uri/ @router;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 由于路由的资源不一定是真实的路径，无法找到具体文件</span><br><span class="line"># 所以需要将请求重写到 index.html 中，然后交给真正的 Vue 路由处理请求资源</span><br><span class="line">location @router &#123;</span><br><span class="line">rewrite ^.*$ /index.html last;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 反向代理配置，匹配/prod-api/请求进行转发。</span><br><span class="line">location /prod-api/ &#123;</span><br><span class="line">  # 后端的真实接口</span><br><span class="line">  proxy_pass http://后端ip或域名:后端端口/;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_set_header Host $host;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header   Cookie $http_cookie;</span><br><span class="line">  # for Ajax</span><br><span class="line">  #fastcgi_param HTTP_X_REQUESTED_WITH $http_x_requested_with;</span><br><span class="line">  proxy_set_header HTTP-X-REQUESTED-WITH $http_x_requested_with;</span><br><span class="line">  proxy_set_header HTTP_X_REQUESTED_WITH $http_x_requested_with;</span><br><span class="line">  proxy_set_header x-requested-with $http_x_requested_with;</span><br><span class="line">  client_max_body_size 10m;</span><br><span class="line">  client_body_buffer_size 128k;</span><br><span class="line">  proxy_connect_timeout 90;</span><br><span class="line">  proxy_send_timeout 90;</span><br><span class="line">  proxy_read_timeout 90;</span><br><span class="line">  proxy_buffer_size 128k;</span><br><span class="line">  proxy_buffers 32 32k;</span><br><span class="line">  proxy_busy_buffers_size 128k;</span><br><span class="line">  proxy_temp_file_write_size 128k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-3-刷新nginx配置文件"><a href="#3-2-3-刷新nginx配置文件" class="headerlink" title="3.2.3 刷新nginx配置文件"></a>3.2.3 刷新nginx配置文件</h3><ul><li>进入/usr/local/nginx，运行以下命令刷新</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h4 id="3-2-4-ip加端口访问是否正常"><a href="#3-2-4-ip加端口访问是否正常" class="headerlink" title="3.2.4 ip加端口访问是否正常"></a>3.2.4 ip加端口访问是否正常</h4><font color='red'>注意：</font>一定要在安全组放行相关端口，不然访问不了<font color='Peach '>至此，部署完成</font>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows使用过程中遇到的问题</title>
      <link href="/2024/11/07/order/Windows/"/>
      <url>/2024/11/07/order/Windows/</url>
      
        <content type="html"><![CDATA[<h2 id="1-解决-windows-exe-文件、快捷方式图标空白不显示问题"><a href="#1-解决-windows-exe-文件、快捷方式图标空白不显示问题" class="headerlink" title="1 解决 windows exe 文件、快捷方式图标空白不显示问题"></a>1 解决 windows exe 文件、快捷方式图标空白不显示问题</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">taskkill /im explorer.exe /f</span><br><span class="line">cd /d %userprofile%\appdata\local</span><br><span class="line">del iconcache.db /a</span><br><span class="line">start explorer.exe</span><br><span class="line">exit </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hutool工具库生成图像验证码</title>
      <link href="/2024/11/07/backend/springboot/hutool-captcha/"/>
      <url>/2024/11/07/backend/springboot/hutool-captcha/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>因为开发需要，需要使用到图像验证码。刚好hutool就有提供相关工具类，在此记录一下使用方法</p><h2 id="二、整合"><a href="#二、整合" class="headerlink" title="二、整合"></a>二、整合</h2><h3 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、编写工具类"><a href="#2、编写工具类" class="headerlink" title="2、编写工具类"></a>2、编写工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LineCaptcha <span class="title function_">getRandomNUmber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 自定义纯数字的验证码（随机4位数字，可重复）</span></span><br><span class="line">        <span class="type">RandomGenerator</span> <span class="variable">randomGenerator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomGenerator</span>(<span class="string">&quot;0123456789&quot;</span>, <span class="number">4</span>);</span><br><span class="line">        <span class="type">LineCaptcha</span> <span class="variable">lineCaptcha</span> <span class="operator">=</span> CaptchaUtil.createLineCaptcha(<span class="number">120</span>, <span class="number">40</span>, <span class="number">4</span>, <span class="number">20</span>);</span><br><span class="line">        lineCaptcha.setGenerator(randomGenerator);</span><br><span class="line">        <span class="comment">// 重新生成code</span></span><br><span class="line">        lineCaptcha.createCode();</span><br><span class="line">        <span class="keyword">return</span> lineCaptcha;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LineCaptcha <span class="title function_">getMathCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">LineCaptcha</span> <span class="variable">captcha</span> <span class="operator">=</span> CaptchaUtil.createLineCaptcha(<span class="number">120</span>, <span class="number">40</span>, <span class="number">4</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="comment">// 自定义验证码内容为四则运算方式</span></span><br><span class="line">        captcha.setGenerator(<span class="keyword">new</span> <span class="title class_">MathGenerator</span>(<span class="number">1</span>));</span><br><span class="line">        <span class="comment">// 重新生成code</span></span><br><span class="line">        captcha.createCode();</span><br><span class="line">        <span class="keyword">return</span> captcha;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取运算结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMachResult</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">one</span> <span class="operator">=</span> Integer.valueOf(code.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="type">char</span> <span class="variable">math</span> <span class="operator">=</span> code.charAt(<span class="number">1</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">two</span> <span class="operator">=</span> Integer.valueOf(code.substring(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">        <span class="keyword">switch</span> (math) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> String.valueOf(one + two);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> String.valueOf(one - two);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> String.valueOf(one * two);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> String.valueOf(one / two);</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、编写验证码响应对象"><a href="#4、编写验证码响应对象" class="headerlink" title="4、编写验证码响应对象"></a>4、编写验证码响应对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码响应对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiModel(description = &quot;验证码响应对象&quot;)</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CaptchaResult</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;验证码ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String captchaKey;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;验证码图片Base64字符串&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String captchaBase64;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、使用"><a href="#5、使用" class="headerlink" title="5、使用"></a>5、使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getCode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;CaptchaResult&gt; <span class="title function_">getCode</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//随机生成算术和随机数验证码</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">rand</span> <span class="operator">=</span> System.currentTimeMillis() % <span class="number">2</span>;</span><br><span class="line">    <span class="comment">//生成键</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">    String code;</span><br><span class="line">    String imageData;</span><br><span class="line">    <span class="comment">//随机数</span></span><br><span class="line">    <span class="keyword">if</span> (rand == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">LineCaptcha</span> <span class="variable">randomNUmber</span> <span class="operator">=</span> CodeUtil.getRandomNUmber();</span><br><span class="line">        code = randomNUmber.getCode();</span><br><span class="line">        imageData = randomNUmber.getImageBase64Data();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//四则运算</span></span><br><span class="line">        <span class="type">LineCaptcha</span> <span class="variable">mathCode</span> <span class="operator">=</span> CodeUtil.getMathCode();</span><br><span class="line">        <span class="comment">//获取运算结果</span></span><br><span class="line">        code = CodeUtil.getMachResult(mathCode.getCode());</span><br><span class="line">        imageData = mathCode.getImageBase64Data();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//写入redis,10分钟过期</span></span><br><span class="line">    redisTemplate.opsForValue().set(key, code, Duration.ofMinutes(<span class="number">10</span>));</span><br><span class="line">    <span class="comment">//封装结果</span></span><br><span class="line">    <span class="type">CaptchaResult</span> <span class="variable">captchaed</span> <span class="operator">=</span> CaptchaResult.builder().captchaKey(key)</span><br><span class="line">        .captchaBase64(imageData)</span><br><span class="line">        .build();</span><br><span class="line">    <span class="keyword">return</span> Result.ok(captchaed);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、其他说明"><a href="#6、其他说明" class="headerlink" title="6、其他说明"></a>6、其他说明</h3><ul><li>前端请求后，.captchaKey存在form表单对象里，用于从redis获取值去校验验证码是否一致，captchaBase64值绑定图片的src属性即可展示。</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot整合redisson实现防重复提交</title>
      <link href="/2024/11/07/backend/springboot/redis-redisson/"/>
      <url>/2024/11/07/backend/springboot/redis-redisson/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在项目使用中，用户可能会误触导致同一个请求在同一个时间点多次提交，导致系统数据重复。如何避免这个问题（防抖），有很多种解决方案。在学习三方框架时，有幸了解到使用redisson分布式锁解决用户防抖问题，因此用一个小demo来验证一下。</p><h2 id="二、引入基本依赖"><a href="#二、引入基本依赖" class="headerlink" title="二、引入基本依赖"></a>二、引入基本依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 分布式锁--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.redisson/redisson-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.30.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hutool --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、编写注解类，用于标记需要防重复提交的请求"><a href="#三、编写注解类，用于标记需要防重复提交的请求" class="headerlink" title="三、编写注解类，用于标记需要防重复提交的请求"></a>三、编写注解类，用于标记需要防重复提交的请求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防止重复提交注解</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span><span class="comment">//用于方法</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span> <span class="comment">//指定注解保留时间，运行时</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span> <span class="comment">//允许被子类继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PreventRepeatSubmit &#123;</span><br><span class="line">    <span class="comment">// 默认间隔时间(单位:秒)，默认5秒</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">expireTime</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、编写切面类，处理防重复提交的业务"><a href="#四、编写切面类，处理防重复提交的业务" class="headerlink" title="四、编写切面类，处理防重复提交的业务"></a>四、编写切面类，处理防重复提交的业务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 重复提交切面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span> <span class="comment">//定义为切面类</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//交给spring容器管理</span></span><br><span class="line"><span class="meta">@Slf4j</span> <span class="comment">// 日志注解</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> <span class="comment">//使用构造器注入RedissonClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RepeatSubmitAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(annotation)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">doAround</span><span class="params">(ProceedingJoinPoint joinPoint, PreventRepeatSubmit annotation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">//获取重复提交锁的 key</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resubmitLockKey</span> <span class="operator">=</span> generateResubmitLockKey();</span><br><span class="line">        <span class="keyword">if</span> (resubmitLockKey != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">expire</span> <span class="operator">=</span> annotation.expireTime(); <span class="comment">// 防重提交锁过期时间</span></span><br><span class="line">            <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(resubmitLockKey);</span><br><span class="line">            <span class="comment">// 获取锁失败，直接返回 false</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">lockResult</span> <span class="operator">=</span> lock.tryLock(<span class="number">0</span>, expire, TimeUnit.SECONDS);</span><br><span class="line">            <span class="comment">//没有获取到锁，重复提交了</span></span><br><span class="line">            <span class="keyword">if</span> (!lockResult) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;重复提交啦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">RESUBMIT_LOCK_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;resubmit:&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TOKEN</span> <span class="operator">=</span> <span class="string">&quot;token&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取重复提交锁的 key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">generateResubmitLockKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resubmitLockKey</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ((ServletRequestAttributes) Objects.requireNonNull(RequestContextHolder.getRequestAttributes())).getRequest();</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(TOKEN);</span><br><span class="line">        log.info(<span class="string">&quot;token:&#123;&#125;&quot;</span>, token);</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isNotBlank(token)) &#123;</span><br><span class="line">            <span class="comment">//token是虚拟的，默认传唯一标识的id值</span></span><br><span class="line">            resubmitLockKey = RESUBMIT_LOCK_PREFIX + token + <span class="string">&quot;:&quot;</span> + request.getMethod() + <span class="string">&quot;-&quot;</span> + request.getRequestURI();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resubmitLockKey;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、测试"><a href="#四、测试" class="headerlink" title="四、测试"></a>四、测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">final</span> UserConverter userConverter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="meta">@PreventRepeatSubmit</span></span><br><span class="line">    <span class="keyword">public</span> UserVO <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUsername(<span class="string">&quot;aliang&quot;</span>);</span><br><span class="line">        user.setNickname(<span class="string">&quot;阿良&quot;</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;小良&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> userConverter.toUserVO(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里用了mapstruct框架，需要了解的可以访问</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch的安装</title>
      <link href="/2024/09/07/backend/db/elasticsearch/"/>
      <url>/2024/09/07/backend/db/elasticsearch/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在进行毕设技术知识储备的时候，关于电商搜索关键词高亮的实现，在网上中找到了很多方案。而使用率最高的就是使用Elasticsearch实现电商搜索。趁着有时间，专门学习一下Elasticsearch的基本使用，本文先学习Elasticsearch的基本安装。</p><h2 id="二、下载软件"><a href="#二、下载软件" class="headerlink" title="二、下载软件"></a>二、下载软件</h2><blockquote><p>ps：后续SpringBoot需要整合ElasticSearch，ElasticSearch与SpringBoot版本需要一一对应，不然整合时会出现一些bug。但Spring官方整合ElasticSearch版本最高只有7.X。通过版本对照查询，我使用的是SpringBoot2.7.x，所以下载的是7.17.6版本。</p></blockquote><h3 id="1、下载Elasticsearch"><a href="#1、下载Elasticsearch" class="headerlink" title="1、下载Elasticsearch"></a>1、下载Elasticsearch</h3><ol><li>下载方式</li></ol><ul><li><p>官网下载</p><p>官网下载地址：<a href="https://www.elastic.co/downloads/past-releases#elasticsearch">https://www.elastic.co/downloads/past-releases#elasticsearch</a></p></li></ul><p>​        <img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/09/07/20240907-125310.png" alt="image-20240907125308273" style="zoom:50%;border: solid 1px black;" /></p><ul><li><p>华为云下载</p><p>下载地址：<a href="https://mirrors.huaweicloud.com/elasticsearch/">https://mirrors.huaweicloud.com/elasticsearch</a></p><p>选择windows-x86_64.zip结尾的文件下载。这里没找到7.17.x的，下7.15.1应该也行。</p></li></ul><ol><li>下载后解压到ElasticSearch目录，后续还会有其他软件统一放到这个目录。</li><li>修改配置文件，解决跨域问题</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./config/elasticsearch.yml,添加以下内容</span></span><br><span class="line"><span class="comment"># 开启跨域</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 所有人访问</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><ol><li>进入bin目录，点击elasticsearch.bat启动Elasticsearch</li><li>访问<a href="http://localhost:9200/，出现数据说明启动成功。">http://localhost:9200/，出现数据说明启动成功。</a></li></ol><p>​    <strong>注意：</strong>9200是Elasticsearch的默认端口，如果端口被占用会在9200的基础上自增，具体可看输出日志。</p><h3 id="2、安装ik分词器插件"><a href="#2、安装ik分词器插件" class="headerlink" title="2、安装ik分词器插件"></a>2、安装ik分词器插件</h3><p>Elasticsearch支持多个分词器插件，而ik对中文分词更精准。</p><p>在Elasticsearch根目录启动命令行工具，运行以下命令，后续紧跟Elasticsearch的版本，比如我的是7.17.6，就写7.17.6。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-plugin install https://get.infini.cloud/elasticsearch/analysis-ik/7.17.6</span><br></pre></td></tr></table></figure><h3 id="3、安装可视化界面elasticsearch-head"><a href="#3、安装可视化界面elasticsearch-head" class="headerlink" title="3、安装可视化界面elasticsearch-head"></a>3、安装可视化界面elasticsearch-head</h3><ol><li><p><strong>前提：</strong>有node运行环境</p></li><li><p><strong>下载地址：</strong><a href="https://github.com/mobz/elasticsearch-head">https://github.com/mobz/elasticsearch-head</a></p></li></ol><p>通过clone有点慢，可以直接下载zip包后解压，放在Elasticsearch目录方便管理</p><ol><li>进入根目录安装依赖并启动</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line">npm run start</span><br></pre></td></tr></table></figure><ol><li>输入<a href="http://localhost:9100/访问">http://localhost:9100/访问</a></li></ol><p>​    输入ElasticSearch访问地址（<a href="http://localhost:9200）连接">http://localhost:9200）连接</a></p><h3 id="4、安装kibana"><a href="#4、安装kibana" class="headerlink" title="4、安装kibana"></a>4、安装kibana</h3><ol><li><p>下载步骤跟 ElasticSearch类似，只是名字换了，其他的（包括版本号）都一样。</p><ol><li>进入kibana根目录下的bin目录，点击kibana.bat启动</li><li>输入<a href="http://localhost:5601/访问">http://localhost:5601/访问</a></li><li>修改配置，切换为中文后重启</li></ol></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./config/kibana.yml 末尾修改i18</span></span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><ol><li>找到开发工具，这里是通过命令行对ElasticSearch操作。</li></ol><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> db </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法之滑动窗口</title>
      <link href="/2024/08/22/backend/sf/huadong/"/>
      <url>/2024/08/22/backend/sf/huadong/</url>
      
        <content type="html"><![CDATA[<h2 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础笔记随笔</title>
      <link href="/2024/08/22/backend/db/mysql-1/"/>
      <url>/2024/08/22/backend/db/mysql-1/</url>
      
        <content type="html"><![CDATA[<h2 id="一、连接"><a href="#一、连接" class="headerlink" title="一、连接"></a>一、连接</h2><h2 id="1-内连接"><a href="#1-内连接" class="headerlink" title="1. 内连接"></a>1. 内连接</h2><p>关键字： inner join或者join</p><p>语法：select colunm from tab_1 join tab_2 on tab_1.column = tab_2.column</p><p>效果：类似于求交集，只返回符合on条件的数据</p><h3 id="2-左右外连接"><a href="#2-左右外连接" class="headerlink" title="2.左右外连接"></a>2.左右外连接</h3><ul><li>关键词：</li></ul><p>​    左外连接：left join</p><p>​    右外连接：right join</p><p>​    效果：</p><p>左外连接：在内连接的基础上，显示左表的数据，右表不匹配显示为null</p><p>右外连接：在内连接的基础上，显示右表的数据，左表不匹配显示为null</p>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令行安装springboot项目基本运行环境</title>
      <link href="/2024/08/15/linux/base/"/>
      <url>/2024/08/15/linux/base/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><pre><code>     SpringBoot项目一般都是部署在Linux系统环境，如何安装项目运行的基本环境，是部署项目不可避免的问题。个人开发部署的话，便捷的就是用宝塔面板安装，复杂点的就是自己去下安装包、自己安装软件。为了学习，本次使用命令行去安装，系统为VMware安装的CentOS7桌面版。</code></pre><p>​        软件安装包：<a href="https://pan.baidu.com/s/1yKF4boy7GEpPR3qP9hgBag?pwd=0328">https://pan.baidu.com/s/1yKF4boy7GEpPR3qP9hgBag?pwd=0328</a> </p><h2 id="二、安装jdk"><a href="#二、安装jdk" class="headerlink" title="二、安装jdk"></a>二、安装jdk</h2><h3 id="1、查看已有的jdk安装包"><a href="#1、查看已有的jdk安装包" class="headerlink" title="1、查看已有的jdk安装包"></a>1、查看已有的jdk安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep jdk</span><br></pre></td></tr></table></figure><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/14/20240814-173230.png" alt="image-20240814173228106"></p><h3 id="2、删除已有的jdk安装包-有多少个就删多少个，我这有三个，以删除第一个为例"><a href="#2、删除已有的jdk安装包-有多少个就删多少个，我这有三个，以删除第一个为例" class="headerlink" title="2、删除已有的jdk安装包(有多少个就删多少个，我这有三个，以删除第一个为例)"></a>2、删除已有的jdk安装包(有多少个就删多少个，我这有三个，以删除第一个为例)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.262.b10-1.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="3、新建-root-software目录"><a href="#3、新建-root-software目录" class="headerlink" title="3、新建/root/software目录"></a>3、新建/root/software目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/software</span><br></pre></td></tr></table></figure><h3 id="4、上传文件到software目录并解压"><a href="#4、上传文件到software目录并解压" class="headerlink" title="4、上传文件到software目录并解压"></a>4、上传文件到software目录并解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf jdk-8u181-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="5、进入jdk1-8-0-181目录并拷贝路径"><a href="#5、进入jdk1-8-0-181目录并拷贝路径" class="headerlink" title="5、进入jdk1.8.0_181目录并拷贝路径"></a>5、进入jdk1.8.0_181目录并拷贝路径</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd jdk1.8.0_181/</span><br><span class="line">pwd</span><br></pre></td></tr></table></figure><blockquote><p>路径: /root/software/jdk1.8.0_181</p></blockquote><h3 id="6、编辑profile文件并保存刷新"><a href="#6、编辑profile文件并保存刷新" class="headerlink" title="6、编辑profile文件并保存刷新"></a>6、编辑profile文件并保存刷新</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><ul><li>添加以下内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/root/software/jdk1.8.0_181</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><blockquote><p>$PATH：导入原本的Path内容</p><p>:$JAVA_HOME/bin：追加内容</p></blockquote><ul><li>保存后执行以下命令刷新配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><font color='Peach '>至此，jdk完成安装</font><h2 id="三、安装Tomcat"><a href="#三、安装Tomcat" class="headerlink" title="三、安装Tomcat"></a>三、安装Tomcat</h2><h3 id="1、上传文件到-root-software目录并解压"><a href="#1、上传文件到-root-software目录并解压" class="headerlink" title="1、上传文件到/root/software目录并解压"></a>1、上传文件到/root/software目录并解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf apache-tomcat-7.0.52.tar.gz </span><br></pre></td></tr></table></figure><h3 id="2、基本启动命令"><a href="#2、基本启动命令" class="headerlink" title="2、基本启动命令"></a>2、基本启动命令</h3><ul><li>进入apache-tomcat-7.0.52目录下的bin目录，运行以下命令启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh </span><br></pre></td></tr></table></figure><ul><li>禁用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shutdown.sh</span><br></pre></td></tr></table></figure><h3 id="3、关闭防火墙"><a href="#3、关闭防火墙" class="headerlink" title="3、关闭防火墙"></a>3、关闭防火墙</h3><ul><li>临时关闭</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><ul><li>永久关闭</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable  firewalld</span><br></pre></td></tr></table></figure><font color='Peach '>至此，Tomcat安装完成！</font><h2 id="四、安装MySQL"><a href="#四、安装MySQL" class="headerlink" title="四、安装MySQL"></a>四、安装MySQL</h2><h3 id="1、上传文件到-root-softwar目录并解压"><a href="#1、上传文件到-root-softwar目录并解压" class="headerlink" title="1、上传文件到/root/softwar目录并解压"></a>1、上传文件到/root/softwar目录并解压</h3><h3 id="2、查看mariadb软件包并删除"><a href="#2、查看mariadb软件包并删除" class="headerlink" title="2、查看mariadb软件包并删除"></a>2、查看mariadb软件包并删除</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep mariadb</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps mariadb-libs-5.5.68-1.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="3、安装软件包"><a href="#3、安装软件包" class="headerlink" title="3、安装软件包"></a>3、安装软件包</h3><font color='red'>注意：</font>这个安装是有先后次序的1、安装common<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-common-5.7.33-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>2、安装libs<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-libs-5.7.33-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>3、安装client<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-client-5.7.33-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>4、安装server<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-server-5.7.33-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>### 4、安装网络工具  1、备份当前的yum源<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>2、安装网络源<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>>  <font color='red'>注意：</font>这里是需要连接外网的，不能连接的话自行百度解决，大致就是配置网卡、配置虚拟网络编辑器（不用打开DHCP)。> 如果虚拟机ping不通主机，看看这个[如何解决主机可以ping通虚拟机，虚拟机不能ping通主机？](https://blog.csdn.net/song_6666/article/details/123548117) 3、清空并重新生成缓存<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp; yum makecache</span><br></pre></td></tr></table></figure>4、安装网络工具<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools –y</span><br></pre></td></tr></table></figure>### 5、MySQL配置#### 1、启动MySQL服务并查看状态* 启动命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>* 查看状态<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure>#### 2、查看MySQL临时密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/mysqld.log |grep password</span><br></pre></td></tr></table></figure>* 结果<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /var/log/mysqld.log |grep password</span><br><span class="line">2024-08-15T03:01:26.102703Z 1 [Note] A temporary password is generated for root@localhost: ;pDLjbCjg6On</span><br><span class="line"></span><br></pre></td></tr></table></figure><font color='red'>;pDLjbCjg6On</font> 即为临时密码，复制备用#### 3、进入mysql服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>> 回车后粘贴临时密码进入服务#### 4、修改mysql密码> 以下命令都是在mysql服务控制台进行* 减低密码校验级别<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=low;</span><br></pre></td></tr></table></figure>* 设置密码长度<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_length=6;</span><br></pre></td></tr></table></figure>* 设置密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>#### 5、使用navicat连接数据库> MySQL数据库默认连接地址是localhost，无法从其他主机访问。* 1、查看所有数据库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>* 2、使用mysql数据库；<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br></pre></td></tr></table></figure>* 3、修改允许访问域名为全部<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br></pre></td></tr></table></figure>* 4、提交事务并退出<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">commit;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>* 5、重启MySQL服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld;</span><br></pre></td></tr></table></figure>* 关闭防火墙<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>#### 6、重置密码 1、重复4的1、2步2、修改<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>#### 7、解决MySQL隔天会自动关闭并清空自建数据库在<font color='red'>/etc/my.cnf</font>添加以下代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure><font color='Peach '>navicat重新连接成功，至此MySQL安装完成！</font><h2 id="五、安装NGINX"><a href="#五、安装NGINX" class="headerlink" title="五、安装NGINX"></a>五、安装NGINX</h2><h3 id="1、安装NGINX编译环境"><a href="#1、安装NGINX编译环境" class="headerlink" title="1、安装NGINX编译环境"></a>1、安装NGINX编译环境</h3><blockquote><p>因为NGINX是C语言写的，安装编译需要C语言编译环境，需要安装配置一下</p></blockquote><h4 id="1-安装gcc的环境"><a href="#1-安装gcc的环境" class="headerlink" title="1. 安装gcc的环境"></a>1. 安装gcc的环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++ -y</span><br></pre></td></tr></table></figure><h4 id="2-安装第三方开发包"><a href="#2-安装第三方开发包" class="headerlink" title="2.安装第三方开发包"></a>2.安装第三方开发包</h4><ul><li>1、PCRE(正则表达式库)，nginx的http模块使用pcre来解析正则表达式</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure><ul><li>2、zlib(压缩库)，nginx使用zlib对http包的内容进行gzip</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure><ul><li>3、openssl</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-deve</span><br></pre></td></tr></table></figure><h3 id="2、安装NGINX"><a href="#2、安装NGINX" class="headerlink" title="2、安装NGINX"></a>2、安装NGINX</h3><h4 id="1-上传NGINX软件包并解压"><a href="#1-上传NGINX软件包并解压" class="headerlink" title="1. 上传NGINX软件包并解压"></a>1. 上传NGINX软件包并解压</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf nginx-1.8.0.tar.gz </span><br></pre></td></tr></table></figure><h4 id="2-编译NGINX"><a href="#2-编译NGINX" class="headerlink" title="2. 编译NGINX"></a>2. 编译NGINX</h4><blockquote><p>在Linux编译C语言程序，用make命令即可，但使用make命令需要有一个makefile文件。NGINX有提供configure来生成makefile文件。</p></blockquote><ul><li>1、进入nginx-1.8.0并使用configure生成makefile文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd  cd nginx-1.8.0/</span><br></pre></td></tr></table></figure><blockquote><p>执行以下命令，这是一条命令。这里指定了安装路径，日志路径，临时目录等等。执行成功后会生成MakeFile文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid \</span><br><span class="line">--lock-path=/var/lock/nginx.lock \</span><br><span class="line">--error-log-path=/var/log/nginx/error.log \</span><br><span class="line">--http-log-path=/var/log/nginx/access.log \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--http-client-body-temp-path=/var/temp/nginx/client \</span><br><span class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</span><br><span class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</span><br><span class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</span><br><span class="line">--http-scgi-temp-path=/var/temp/nginx/scgi</span><br></pre></td></tr></table></figure><ul><li>2、使用make命令编译并安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure><ul><li>3、进入安装目录查看是否安装成功（出现nginx目录）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><ul><li>4、新建nginx的临时目录，不新建等下启动会失败</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir  /var/temp/nginx  -p</span><br></pre></td></tr></table></figure><h3 id="3、NGINX的基本使用"><a href="#3、NGINX的基本使用" class="headerlink" title="3、NGINX的基本使用"></a>3、NGINX的基本使用</h3><h4 id="1、启动nginx"><a href="#1、启动nginx" class="headerlink" title="1、启动nginx"></a>1、启动nginx</h4><ul><li>进入nginx的sbin目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx/sbin</span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br></pre></td></tr></table></figure><ul><li>查看nginx进程检查是否启动成功</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep nginx </span><br></pre></td></tr></table></figure><ul><li>主机访问nginx，ip访问出现以下画面说明成功</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/15/20240815-123743.png" alt="image-20240815123740843"></p><h4 id="2、关闭nginx"><a href="#2、关闭nginx" class="headerlink" title="2、关闭nginx"></a>2、关闭nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s quit</span><br></pre></td></tr></table></figure><h4 id="3、刷新配置文件"><a href="#3、刷新配置文件" class="headerlink" title="3、刷新配置文件"></a>3、刷新配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><font color='Peach '>至此，NGINX安装完成</font><h2 id="六、安装redis"><a href="#六、安装redis" class="headerlink" title="六、安装redis"></a>六、安装redis</h2><h3 id="1、上传文件并解压"><a href="#1、上传文件并解压" class="headerlink" title="1、上传文件并解压"></a>1、上传文件并解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis-7.0.5.tar.gz</span><br></pre></td></tr></table></figure><h3 id="2、进入redis-7-0-5目录并编译"><a href="#2、进入redis-7-0-5目录并编译" class="headerlink" title="2、进入redis-7.0.5目录并编译"></a>2、进入redis-7.0.5目录并编译</h3><blockquote><p>ps: 这里需要C语言编译环境，没有安装可以看下安装NGINX的步骤</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd redis-7.0.5 &amp; make</span><br></pre></td></tr></table></figure><h3 id="3、创建安装目录"><a href="#3、创建安装目录" class="headerlink" title="3、创建安装目录"></a>3、创建安装目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/redis</span><br></pre></td></tr></table></figure><h3 id="4、安装redis，指定安装目录在-usr-local-redis"><a href="#4、安装redis，指定安装目录在-usr-local-redis" class="headerlink" title="4、安装redis，指定安装目录在/usr/local/redis"></a>4、安装redis，指定安装目录在/usr/local/redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install PREFIX=/usr/local/redis/</span><br></pre></td></tr></table></figure><h3 id="5、切换安装目录查看是否安装成功"><a href="#5、切换安装目录查看是否安装成功" class="headerlink" title="5、切换安装目录查看是否安装成功"></a>5、切换安装目录查看是否安装成功</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/redis/bin</span><br></pre></td></tr></table></figure><h3 id="6、启动redis服务"><a href="#6、启动redis服务" class="headerlink" title="6、启动redis服务"></a>6、启动redis服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server  </span><br></pre></td></tr></table></figure><h3 id="7、修改配置"><a href="#7、修改配置" class="headerlink" title="7、修改配置"></a>7、修改配置</h3><h4 id="1、拷贝配置文件"><a href="#1、拷贝配置文件" class="headerlink" title="1、拷贝配置文件"></a>1、拷贝配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root/software/redis-7.0.5</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure><h4 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a>2、编辑配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/redis/bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><ul><li>1、开启保护模式</li></ul><blockquote><p>命令行模式下，输入以下命令快速查询，按n下一个</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/protect</span><br></pre></td></tr></table></figure><p>将protected-mode 设置为yes  </p><ul><li>2、设置访问密码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/requirepass </span><br></pre></td></tr></table></figure><p>找到#requirepass foobared</p><p>改为<strong>requirepass  你的密码</strong> </p><ul><li>3、开放IP访问地址</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bind</span><br></pre></td></tr></table></figure><p>找到bind  127.0.0.1 -::1</p><p>改为bind  0.0.0.0</p><h3 id="3、使用systemctl命令启动和关闭"><a href="#3、使用systemctl命令启动和关闭" class="headerlink" title="3、使用systemctl命令启动和关闭"></a>3、使用systemctl命令启动和关闭</h3><ul><li>新建并编辑redis.service文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/redis.service</span><br></pre></td></tr></table></figure><ul><li>编辑内容</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务的说明</span></span><br><span class="line"><span class="attr">[Unit]</span></span><br><span class="line"><span class="comment"># 描述服务</span></span><br><span class="line"><span class="attr">Description</span>=<span class="string">redis</span></span><br><span class="line"><span class="comment"># 描述服务类别</span></span><br><span class="line"><span class="attr">After</span>=<span class="string">network.target</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 服务运行参数的设置</span></span><br><span class="line"><span class="attr">[Service]</span></span><br><span class="line"><span class="comment"># 后台运行的形式</span></span><br><span class="line"><span class="attr">Type</span>=<span class="string">forking</span></span><br><span class="line"><span class="comment"># 启动命令</span></span><br><span class="line"><span class="attr">ExecStart</span>=<span class="string">/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf</span></span><br><span class="line"><span class="comment"># 停止命令</span></span><br><span class="line"><span class="attr">ExecStop</span>=<span class="string">/usr/local/redis/bin/redis-cli -a Redis密码 shutdown</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 服务安装的设置</span></span><br><span class="line"><span class="attr">[Install]</span></span><br><span class="line"><span class="comment"># 用户的模式</span></span><br><span class="line"><span class="attr">WantedBy</span>=<span class="string">multi-user.target</span></span><br></pre></td></tr></table></figure><ul><li>刷新服务文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload </span><br></pre></td></tr></table></figure><ul><li>先用命令行关闭Redis服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-cli -a Redis密码 shutdown --no-auth-warning</span><br></pre></td></tr></table></figure><ul><li>再用systemctl命令启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合MapStruct实现对象类型转化</title>
      <link href="/2024/08/15/backend/springboot/MapStruct/"/>
      <url>/2024/08/15/backend/springboot/MapStruct/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在多层架构开发中，我们不可避免的会使用到DTO、PO、VO等相关类型，如何从基本entity对象转换成DTO、VO对象，以前的我可能会想到新建一个对象，一个个set设置，或者利用BeanUtil拷贝。但这些工作很繁琐，BeanUtil又是基于反射实现的，效率很低，类型和变量名都要保持一致才能使用。就，很烦！！！有没有什么库可以代替我们实现这些功能呢，像Lombok那样,使用注解在编译时生成基本的get和set方法。哎，还真有！那就是<a href="https://mapstruct.org/">MapStruct – Java bean 映射，简单的方法！</a>。通过简单配置，即可实现对象类型转换，在此记录一下学习。</p><h2 id="二、引入依赖"><a href="#二、引入依赖" class="headerlink" title="二、引入依赖"></a>二、引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.5.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.5.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、基本使用"><a href="#三、基本使用" class="headerlink" title="三、基本使用"></a>三、基本使用</h2><h3 id="1、前置准备"><a href="#1、前置准备" class="headerlink" title="1、前置准备"></a>1、前置准备</h3><ul><li>基本对象</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 基本对象</span><br><span class="line"> */</span><br><span class="line">@Data</span><br><span class="line">public class User &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 账户名</span><br><span class="line">     */</span><br><span class="line">    private String username;</span><br><span class="line">    /**</span><br><span class="line">     * 昵称</span><br><span class="line">     */</span><br><span class="line">    private String nickname;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 名字</span><br><span class="line">     */</span><br><span class="line">    private String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>视图对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户视图对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 账户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、创建转换器"><a href="#2、创建转换器" class="headerlink" title="2、创建转换器"></a>2、创建转换器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户转换器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Mapper(componentModel = &quot;Spring&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserConverter</span> &#123;</span><br><span class="line"></span><br><span class="line">    UserVO <span class="title function_">toUserVO</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">toUser</span><span class="params">(UserVO userVO)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译后会创建当前转换器的实现类并交给spring管理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class UserConverterImpl implements UserConverter &#123;</span><br><span class="line">    public UserConverterImpl() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public UserVO toUserVO(User user) &#123;</span><br><span class="line">        if (user == null) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            UserVO userVO = new UserVO();</span><br><span class="line">            userVO.setUsername(user.getUsername());</span><br><span class="line">            userVO.setNickname(user.getNickname());</span><br><span class="line">            userVO.setName(user.getName());</span><br><span class="line">            return userVO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public User toUser(UserVO userVO) &#123;</span><br><span class="line">        if (userVO == null) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            User user = new User();</span><br><span class="line">            user.setUsername(userVO.getUsername());</span><br><span class="line">            user.setNickname(userVO.getNickname());</span><br><span class="line">            user.setName(userVO.getName());</span><br><span class="line">            return user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DemoApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span>  UserConverter userConverter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUsername(<span class="string">&quot;aliang&quot;</span>);</span><br><span class="line">        user.setNickname(<span class="string">&quot;阿良&quot;</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;小良&quot;</span>);</span><br><span class="line">        <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> userConverter.toUserVO(user);</span><br><span class="line">        System.out.println(userVO);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>UserVO(username=aliang, nickname=阿良, name=小良)</p></blockquote><h2 id="四、复杂使用"><a href="#四、复杂使用" class="headerlink" title="四、复杂使用"></a>四、复杂使用</h2><blockquote><p> <strong>补充：</strong> idea有一个mapstuct提示插件<font color='red'>MapStruct support</font>，需要的可以自行去下载</p></blockquote><h3 id="1、类型一样，变量名不一样"><a href="#1、类型一样，变量名不一样" class="headerlink" title="1、类型一样，变量名不一样"></a>1、类型一样，变量名不一样</h3><blockquote><p>使用@Mapping注解，多个用@Mappings注解</p></blockquote><ul><li><strong>基本用法</strong></li></ul><p>在原本的基础上加上以下注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapping(source = &quot;nickname&quot;, target = &quot;name&quot;)</span></span><br><span class="line">UserVO <span class="title function_">toUserVO</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>解释：source指向User的变量名，target指向UserVO的变量名</p></blockquote><ul><li><strong>编译结果</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> UserVO <span class="title function_">toUserVO</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserVO</span>();</span><br><span class="line">        userVO.setName(user.getNickname());</span><br><span class="line">        userVO.setUsername(user.getUsername());</span><br><span class="line">        userVO.setNickname(user.getNickname());</span><br><span class="line">        <span class="keyword">return</span> userVO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>UserVO(username=aliang, nickname=阿良, name=阿良)</p></blockquote><h3 id="2、类型不一样，变量名一样"><a href="#2、类型不一样，变量名一样" class="headerlink" title="2、类型不一样，变量名一样"></a>2、类型不一样，变量名一样</h3><ul><li>修改vo对象如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户视图对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 账户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改转换器方法如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mappings(&#123;</span></span><br><span class="line"><span class="meta">    @Mapping(target = &quot;name&quot;, expression = &quot;java(convertName(user))&quot;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line">UserVO <span class="title function_">toUserVO</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span> Integer <span class="title function_">convertName</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> user.toString().length();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>expression意为表达式，里面写调用的方法</p></blockquote><ul><li>编译后结果</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> UserVO <span class="title function_">toUserVO</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserVO</span>();</span><br><span class="line">        userVO.setUsername(user.getUsername());</span><br><span class="line">        userVO.setNickname(user.getNickname());</span><br><span class="line">        userVO.setName(<span class="built_in">this</span>.convertName(user));</span><br><span class="line">        <span class="keyword">return</span> userVO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><blockquote><p>UserVO(username=aliang, nickname=阿良, name=43)</p></blockquote><h3 id="3、解决No-property-…-Did-you-mean”nulL”-报错"><a href="#3、解决No-property-…-Did-you-mean”nulL”-报错" class="headerlink" title="3、解决No property ….Did you mean”nulL”?报错"></a>3、解决No property ….Did you mean”nulL”?报错</h3><ul><li>原因：因为当前是mapStruct和LomBok一起使用，二者都是编译时执行，会有一个先后编译的问题，如果是mapStruct先编译，类的get和set方法还没编译生成，自然而然会报错</li></ul><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><blockquote><p>既然是先后编译问题，那我们制定先后编译的顺序就行了，在pom.xml文件添加以下内容</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 添加以下内容 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.5.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok-mapstruct-binding<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 添加内容结束  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> h.gr_store_code,h.article_code,d.order_qty</span><br><span class="line"><span class="keyword">from</span> order_header h</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> order_detail d <span class="keyword">on</span> h.order_no <span class="operator">=</span> d.order_no</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">h.order_date <span class="keyword">between</span> <span class="string">&#x27;2022-01-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2022-03-01&#x27;</span></span><br><span class="line"><span class="keyword">and</span> d.order_qty <span class="operator">&gt;</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> d.order_qty <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合EasyExcel</title>
      <link href="/2024/08/15/backend/springboot/ali-easyExcel/"/>
      <url>/2024/08/15/backend/springboot/ali-easyExcel/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在后台管理系统中，数据的导入和导出是一件很常见的事情。目前比较流行的Excel操作工具主要有Apache的Poi库、阿里的easy Excel库等等。经过技术考量，决定使用easyExcel实现用户数据的导入导出。</p><h2 id="二、开发"><a href="#二、开发" class="headerlink" title="二、开发"></a>二、开发</h2><h3 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hutool --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、定义导入对象"><a href="#2、定义导入对象" class="headerlink" title="2、定义导入对象"></a>2、定义导入对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户导入对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImportDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;账户&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;姓名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;性别&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String genderLabel;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;手机号码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、定义常量类及工具类"><a href="#3、定义常量类及工具类" class="headerlink" title="3、定义常量类及工具类"></a>3、定义常量类及工具类</h3><ul><li>常量类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表格常量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelConstant</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应头，允许暴露的头</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ACCESS_CONTROL_EXPOSE_HEADERS</span> <span class="operator">=</span> <span class="string">&quot;Access-Control-Expose-Headers&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应头的值，允许暴露的头</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT_DISPOSITION</span> <span class="operator">=</span> <span class="string">&quot;Content-Disposition&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT_DISPOSITION_VALUE</span> <span class="operator">=</span> <span class="string">&quot;attachment;filename=&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应头，Content-Type的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT_TYPE_VALUE</span> <span class="operator">=</span> <span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Excel 工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; String <span class="title function_">importExcel</span><span class="params">(InputStream is, Class clazz, MyAnalysisEventListener&lt;T&gt; listener)</span> &#123;</span><br><span class="line">        EasyExcel.read(is, clazz, listener).sheet().doRead();</span><br><span class="line">        <span class="keyword">return</span> listener.getMsg();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求头</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setHeader</span><span class="params">(HttpServletResponse response, String fileName)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="comment">//向外部暴露请求头</span></span><br><span class="line">        response.setHeader(ExcelConstant.ACCESS_CONTROL_EXPOSE_HEADERS, ExcelConstant.CONTENT_DISPOSITION);</span><br><span class="line">        response.setContentType(ExcelConstant.CONTENT_TYPE_VALUE);</span><br><span class="line">        response.setHeader(ExcelConstant.CONTENT_DISPOSITION, ExcelConstant.CONTENT_DISPOSITION_VALUE + URLEncoder.encode(fileName, String.valueOf(StandardCharsets.UTF_8)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、自定义解析结果监听器"><a href="#3、自定义解析结果监听器" class="headerlink" title="3、自定义解析结果监听器"></a>3、自定义解析结果监听器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> * 自定义解析结果监听器</span><br><span class="line"> *</span><br><span class="line"> * <span class="meta">@author</span> haoxr</span><br><span class="line"> * <span class="meta">@since</span> <span class="number">2023</span>/<span class="number">03</span>/<span class="number">01</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">MyAnalysisEventListener</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">AnalysisEventListener</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title function_">getMsg</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>导入监听</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户导入监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImportListener</span> <span class="keyword">extends</span> <span class="title class_">MyAnalysisEventListener</span>&lt;UserImportDTO&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_PASSWORD</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="comment">// 有效条数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> validCount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无效条数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> invalidCount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 导入返回信息</span></span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 管理员业务层，负责查询账号唯一以及保存数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AdminInfoService userService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码加密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PasswordEncoder passwordEncoder;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类型转换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserConverter userConverter;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 角色业务层</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysRoleService roleService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AdminRoleService userRoleService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每隔100条存储数据库，然后清理list ，方便内存回收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BATCH_COUNT</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> List&lt;AdminInfo&gt; cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserImportListener</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = SpringUtil.getBean(AdminInfoService.class);</span><br><span class="line">        <span class="built_in">this</span>.passwordEncoder = SpringUtil.getBean(PasswordEncoder.class);</span><br><span class="line">        <span class="built_in">this</span>.roleService = SpringUtil.getBean(SysRoleService.class);</span><br><span class="line">        <span class="built_in">this</span>.userRoleService = SpringUtil.getBean(AdminRoleService.class);</span><br><span class="line">        <span class="built_in">this</span>.userConverter = SpringUtil.getBean(UserConverter.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每一条数据解析都会来调用</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 1. 数据校验；全字段校验</span></span><br><span class="line"><span class="comment">     * 2. 数据持久化；</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userImportDTO 一行数据，类似于 &#123;<span class="doctag">@link</span> AnalysisContext#readRowHolder()&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(UserImportDTO userImportDTO, AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;解析到一条用户数据:&#123;&#125;&quot;</span>, JSONUtil.toJsonStr(userImportDTO));</span><br><span class="line">        <span class="comment">// 校验数据</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">validationMsg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> userImportDTO.getUsername();</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(username)) &#123;</span><br><span class="line">            validationMsg.append(<span class="string">&quot;用户名为空；&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> userService.count(<span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;AdminInfo&gt;().eq(AdminInfo::getUsername, username));</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                validationMsg.append(<span class="string">&quot;用户名已存在；&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">nickname</span> <span class="operator">=</span> userImportDTO.getName();</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(nickname)) &#123;</span><br><span class="line">            validationMsg.append(<span class="string">&quot;用户昵称为空；&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> userImportDTO.getPhone();</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(mobile)) &#123;</span><br><span class="line">            validationMsg.append(<span class="string">&quot;手机号码为空；&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!Validator.isMobile(mobile)) &#123;</span><br><span class="line">                validationMsg.append(<span class="string">&quot;手机号码不正确；&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (validationMsg.length() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            validCount++;</span><br><span class="line">            <span class="comment">// 校验通过,拷贝数据</span></span><br><span class="line">            <span class="type">AdminInfo</span> <span class="variable">entity</span> <span class="operator">=</span> userConverter.toEntity(userImportDTO);</span><br><span class="line">            <span class="comment">// 性别翻译</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">genderLabel</span> <span class="operator">=</span> userImportDTO.getGenderLabel();</span><br><span class="line">            <span class="keyword">if</span> (StrUtil.isNotBlank(genderLabel)) &#123;</span><br><span class="line">                entity.setSex(genderLabel.equals(<span class="string">&quot;男&quot;</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 暂存至缓冲区</span></span><br><span class="line">            cachedDataList.add(entity);</span><br><span class="line">            <span class="comment">//缓存区数据超过最大存储数量，存入数据</span></span><br><span class="line">            <span class="keyword">if</span> (cachedDataList.size() &gt;= BATCH_COUNT) &#123;</span><br><span class="line">                saveData();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            invalidCount++;</span><br><span class="line">            msg.append(<span class="string">&quot;第&quot;</span>).append(validCount + invalidCount).append(<span class="string">&quot;行数据校验失败：&quot;</span>).append(validationMsg).append(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有数据解析完成会来调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        <span class="comment">//最后的数据还要保存</span></span><br><span class="line">        <span class="keyword">if</span> (cachedDataList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            saveData();</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;所有数据解析完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//设置默认密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">encode</span> <span class="operator">=</span> passwordEncoder.encode(DEFAULT_PASSWORD);</span><br><span class="line">        cachedDataList.forEach(adminInfo -&gt; &#123;</span><br><span class="line">            adminInfo.setPassword(encode);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 批量保存用户数据</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> userService.saveBatch(cachedDataList);</span><br><span class="line">        <span class="keyword">if</span> (b) &#123;</span><br><span class="line">            <span class="comment">// 设置默认角色 SYSTEM</span></span><br><span class="line">            <span class="comment">//获取系统角色id</span></span><br><span class="line">            <span class="type">Long</span> <span class="variable">roleId</span> <span class="operator">=</span> roleService.getObj(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SysRole&gt;().select(<span class="string">&quot;id&quot;</span>).eq(<span class="string">&quot;role_code&quot;</span>, <span class="string">&quot;SYSTEM&quot;</span>),</span><br><span class="line">                    o -&gt; (Long) o);</span><br><span class="line">            <span class="comment">//批量存入角色用户数据</span></span><br><span class="line">            List&lt;AdminRole&gt; collect = cachedDataList.stream().map(adminInfo -&gt; &#123;</span><br><span class="line">                <span class="type">AdminRole</span> <span class="variable">adminRole</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdminRole</span>();</span><br><span class="line">                adminRole.setUserId(adminInfo.getId());</span><br><span class="line">                adminRole.setRoleId(roleId);</span><br><span class="line">                <span class="keyword">return</span> adminRole;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            userRoleService.saveBatch(collect);</span><br><span class="line">            <span class="comment">// 清空数据</span></span><br><span class="line">            cachedDataList.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 总结信息</span></span><br><span class="line">        <span class="keyword">return</span> StrUtil.format(<span class="string">&quot;导入用户结束：成功&#123;&#125;条，失败&#123;&#125;条；&lt;br/&gt;&#123;&#125;&quot;</span>, validCount, invalidCount, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><h3 id="1、下载模版"><a href="#1、下载模版" class="headerlink" title="1、下载模版"></a>1、下载模版</h3><blockquote><p>在resource下的template\excel有一个用户导入模版.xlsx文件，</p></blockquote><ul><li>xlsx文件详情</li></ul><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/08/15/20240815-192228.png" alt="image-20240815192226115"></p><ul><li>代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;用户模版下载&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/template&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloadTemplate</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;用户导入模板.xlsx&quot;</span>;</span><br><span class="line">    <span class="comment">//设置请求头</span></span><br><span class="line">    ExcelUtils.setHeader(response, fileName);</span><br><span class="line">    <span class="comment">//获取文件输入流</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileClassPath</span> <span class="operator">=</span> <span class="string">&quot;templates&quot;</span> + File.separator + <span class="string">&quot;excel&quot;</span> + File.separator + fileName;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getClassLoader().getResourceAsStream(fileClassPath);</span><br><span class="line">    <span class="comment">//通过输出流向前端返回数据</span></span><br><span class="line">    <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">    <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcel.write(outputStream).withTemplate(inputStream).build();</span><br><span class="line">    excelWriter.finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、导入数据"><a href="#2、导入数据" class="headerlink" title="2、导入数据"></a>2、导入数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Log(title = &quot;管理员管理&quot;, businessType = BusinessType.IMPORT)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/import&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">importUsers</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//创建数据导入监听器</span></span><br><span class="line">    <span class="type">UserImportListener</span> <span class="variable">listener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserImportListener</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> ExcelUtils.importExcel(file.getInputStream(), UserImportDTO.class, listener);</span><br><span class="line">    <span class="keyword">return</span> Result.ok(msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、导出数据"><a href="#3、导出数据" class="headerlink" title="3、导出数据"></a>3、导出数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;导出管理员信息&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/export&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportUsers</span><span class="params">(AdminInfoQueryDTO queryParams, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;管理员列表&quot;</span>;</span><br><span class="line">    <span class="comment">// 设置请求头</span></span><br><span class="line">    ExcelUtils.setHeader(response, fileName);</span><br><span class="line">    List&lt;AdminExportVO&gt; exportUserList = adminInfoService.listExportUsers(queryParams);</span><br><span class="line">    EasyExcel.write(response.getOutputStream(), AdminExportVO.class).sheet(<span class="string">&quot;管理员列表&quot;</span>)</span><br><span class="line">        .doWrite(exportUserList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot简单整合阿里云短信服务</title>
      <link href="/2024/08/13/backend/springboot/ali-sms/"/>
      <url>/2024/08/13/backend/springboot/ali-sms/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在日常开发中，验证码的实现是很常见的功能，主要用于登录验证、注册验证、身份验证等等。本文通过整合阿里云短信服务，实现手机注册验证码的实现</p><h2 id="二、开通服务"><a href="#二、开通服务" class="headerlink" title="二、开通服务"></a>二、开通服务</h2><p>本文不细讲如何开通服务，具体可百度或者点击这个链接<a href="https://help.aliyun.com/zh/sms/getting-started/get-started-with-sms">短信新手操作指引_短信服务(SMS)-阿里云帮助中心 (aliyun.com)</a>。</p><h2 id="三、Springboot整合阿里云短信服务"><a href="#三、Springboot整合阿里云短信服务" class="headerlink" title="三、Springboot整合阿里云短信服务"></a>三、Springboot整合阿里云短信服务</h2><h3 id="1、安装依赖"><a href="#1、安装依赖" class="headerlink" title="1、安装依赖"></a>1、安装依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云核心库，负责与阿里云http请求、异常处理等配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 短信依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、配置文件"><a href="#2、配置文件" class="headerlink" title="2、配置文件"></a>2、配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 阿里配置</span></span><br><span class="line"><span class="attr">al:</span></span><br><span class="line">  <span class="attr">sms:</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="string">xxx</span> <span class="comment">#登录秘钥Id，头像右上角点击accessKeyS实现获取</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span> <span class="string">xxx</span> <span class="comment">#登录秘钥值</span></span><br><span class="line">    <span class="attr">sign:</span> <span class="string">xxx</span> <span class="comment"># 签名值</span></span><br><span class="line">    <span class="attr">templateCode:</span> <span class="string">xxx</span> <span class="comment"># 模版Id</span></span><br><span class="line">    <span class="attr">regionId:</span> <span class="string">cn-hangzhou</span> <span class="comment">#区域值</span></span><br></pre></td></tr></table></figure><h3 id="3、编写配置文件"><a href="#3、编写配置文件" class="headerlink" title="3、编写配置文件"></a>3、编写配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(&quot;al.sms&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SMSConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问id</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="comment">//访问秘钥</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="comment">//签名</span></span><br><span class="line">    <span class="keyword">private</span> String sign;</span><br><span class="line">    <span class="comment">//模板</span></span><br><span class="line">    <span class="keyword">private</span> String templateCode;</span><br><span class="line">    <span class="comment">//地域</span></span><br><span class="line">    <span class="keyword">private</span> String regionId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4、编写工具类"><a href="#4、编写工具类" class="headerlink" title="4、编写工具类"></a>4、编写工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 短信工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SMSTemplate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SMSConfig smsConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送短信</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phoneNumber 手机号码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code        验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ClientException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">send</span><span class="params">(String phoneNumber, String code)</span> <span class="keyword">throws</span> ClientException &#123;</span><br><span class="line">        <span class="type">DefaultProfile</span> <span class="variable">profile</span> <span class="operator">=</span> DefaultProfile.getProfile(smsConfig.getRegionId(), smsConfig.getAccessKeyId(), smsConfig.getAccessKeySecret());</span><br><span class="line">        <span class="type">IAcsClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAcsClient</span>(profile);</span><br><span class="line">        <span class="type">CommonRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonRequest</span>();</span><br><span class="line">        request.setMethod(MethodType.POST);</span><br><span class="line">        request.setDomain(<span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>);</span><br><span class="line">        request.setVersion(<span class="string">&quot;2017-05-25&quot;</span>);</span><br><span class="line">        request.setAction(<span class="string">&quot;SendSms&quot;</span>);</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;RegionId&quot;</span>, smsConfig.getRegionId());</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;PhoneNumbers&quot;</span>, phoneNumber);</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;SignName&quot;</span>, smsConfig.getSign());<span class="comment">//短信签名名称</span></span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;TemplateCode&quot;</span>, smsConfig.getTemplateCode());<span class="comment">//短信模板id</span></span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;TemplateParam&quot;</span>, <span class="string">&quot;&#123;\&quot;code\&quot;:\&quot;&quot;</span> + code + <span class="string">&quot;\&quot;&#125;&quot;</span>);<span class="comment">//code填充的参数（JSON对象格式)</span></span><br><span class="line"></span><br><span class="line">        <span class="type">CommonResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.getCommonResponse(request);</span><br><span class="line">        System.out.println(response.getData());</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> response.getData();</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">g</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">result</span> <span class="operator">=</span> g.fromJson(json, HashMap.class);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>.equals(result.get(<span class="string">&quot;Message&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> SMSTemplate smsTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/sendCode/&#123;phone&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Boolean&gt; <span class="title function_">sendCode</span><span class="params">(<span class="meta">@PathVariable</span> String phone)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//验证手机长度</span></span><br><span class="line">    <span class="keyword">if</span> (phone.length() != <span class="number">11</span>) &#123;</span><br><span class="line">       <span class="comment">// 抛出异常</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//校验手机格式</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;^1[3-9]\\d&#123;9&#125;$&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!phone.matches(regex)) &#123;</span><br><span class="line">       <span class="comment">// 抛出异常</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断手机是否已注册</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span> ) &#123;</span><br><span class="line">      <span class="comment">//抛出异常</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成4位验证码</span></span><br><span class="line">    <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">randomNumber</span> <span class="operator">=</span> String.valueOf(random.nextInt(<span class="number">9000</span>) + <span class="number">1000</span>);</span><br><span class="line">    <span class="comment">//发送验证码</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (smsTemplate.send(phone, randomNumber)) &#123;</span><br><span class="line">            <span class="comment">//发送成功,存入redis,5分钟</span></span><br><span class="line">            redisTemplate.opsForValue().set(phone, randomNumber, Duration.ofMinutes(<span class="number">5</span>));</span><br><span class="line">            <span class="keyword">return</span> Result.ok();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">       <span class="comment">//抛出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode同款编辑器在Vue3的的整合教程</title>
      <link href="/2024/07/29/frontend/vue/util-1/"/>
      <url>/2024/07/29/frontend/vue/util-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    在开J系统中，需要使用提供一个代码编辑环境给用户进行代码编写。通过综合调研，选用了VScode同款编辑器monaco-editor。通过整合该编辑器，实现了代码编辑、高亮、自动补全、提示等功能</p><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><ul><li>官网： <a href="https://microsoft.github.io/monaco-editor/">Monaco Editor (microsoft.github.io)</a></li></ul><p>通过npm引入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install monaco-editor</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>封装代码提示对象工具类（src/utils/CodeCompletionItem.ts)</li></ul><blockquote><p>官方只有js，但提供了相关的对象类型，所以引入了ts的对象校验，目前这里只有python、cpp和java，其他的按需引入</p></blockquote><p>说明：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> monaco <span class="keyword">from</span> <span class="string">&quot;monaco-editor&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; language <span class="keyword">as</span> pythonLanguage &#125; <span class="keyword">from</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/python/python.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; language <span class="keyword">as</span> cppLanguage &#125; <span class="keyword">from</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/cpp/cpp.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; language <span class="keyword">as</span> javaLanguage &#125; <span class="keyword">from</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/java/java.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; languages &#125; <span class="keyword">from</span> <span class="string">&quot;monaco-editor&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CompletionItem</span> = languages.<span class="property">CompletionItem</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pythonCompletion = monaco.<span class="property">languages</span>.<span class="title function_">registerCompletionItemProvider</span>(</span><br><span class="line">  <span class="string">&quot;python&quot;</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">provideCompletionItems</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> <span class="attr">suggestions</span>: <span class="title class_">CompletionItem</span>[] = [];</span><br><span class="line">      pythonLanguage.<span class="property">keywords</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">        suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">          <span class="attr">label</span>: item,</span><br><span class="line">          <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Keyword</span>,</span><br><span class="line">          <span class="attr">insertText</span>: item,</span><br><span class="line">        &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">suggestions</span>: suggestions,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cppCompletion = monaco.<span class="property">languages</span>.<span class="title function_">registerCompletionItemProvider</span>(<span class="string">&quot;cpp&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">provideCompletionItems</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">suggestions</span>: <span class="title class_">CompletionItem</span>[] = [];</span><br><span class="line">    cppLanguage.<span class="property">keywords</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">      suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: item,</span><br><span class="line">        <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Keyword</span>,</span><br><span class="line">        <span class="attr">insertText</span>: item,</span><br><span class="line">      &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    cppLanguage.<span class="property">operators</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">      suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: item,</span><br><span class="line">        <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Operator</span>,</span><br><span class="line">        <span class="attr">insertText</span>: item,</span><br><span class="line">      &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">suggestions</span>: suggestions,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> javaCompletion = monaco.<span class="property">languages</span>.<span class="title function_">registerCompletionItemProvider</span>(<span class="string">&quot;java&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">provideCompletionItems</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">suggestions</span>: <span class="title class_">CompletionItem</span>[] = [];</span><br><span class="line">    javaLanguage.<span class="property">keywords</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">      suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: item,</span><br><span class="line">        <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Keyword</span>,</span><br><span class="line">        <span class="attr">insertText</span>: item,</span><br><span class="line">      &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    javaLanguage.<span class="property">operators</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">      suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: item,</span><br><span class="line">        <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Operator</span>,</span><br><span class="line">        <span class="attr">insertText</span>: item,</span><br><span class="line">      &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">label</span>: <span class="string">&quot;Class&quot;</span>,</span><br><span class="line">      <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Class</span>,</span><br><span class="line">      <span class="attr">insertText</span>: <span class="string">&quot;Class&quot;</span>,</span><br><span class="line">    &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    suggestions.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">label</span>: <span class="string">&quot;Interface&quot;</span>,</span><br><span class="line">      <span class="attr">kind</span>: monaco.<span class="property">languages</span>.<span class="property">CompletionItemKind</span>.<span class="property">Interface</span>,</span><br><span class="line">      <span class="attr">insertText</span>: <span class="string">&quot;Interface&quot;</span>,</span><br><span class="line">    &#125; <span class="keyword">as</span> <span class="title class_">CompletionItem</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">suggestions</span>: suggestions,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; pythonCompletion, cppCompletion, javaCompletion &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>js引入eslint会报错，创建src/typeing/monaco-editor.d.ts文件，写入以下内容</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这将告诉TypeScript，你正在使用一个名为xxx的模块，但它没有提供类型信息</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/python/python.js&quot;</span>;</span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/cpp/cpp.js&quot;</span>;</span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;monaco-editor/esm/vs/basic-languages/java/java.js&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>子组件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;code-editor&quot; ref=&quot;codeEditorRef&quot; style=&quot;height: 400px&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import * as monaco from &quot;monaco-editor&quot;;</span><br><span class="line">import &#123; defineProps, onMounted, ref, toRaw, watch, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import * as Completion from &quot;@/utils/CodeCompletionItem&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  value: string;</span><br><span class="line">  handleChange: (v: string) =&gt; void;</span><br><span class="line">  height?: string;</span><br><span class="line">  language: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 父组件传的值</span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  value: () =&gt; &quot;&quot;,</span><br><span class="line">  handleChange: () =&gt; &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;,</span><br><span class="line">  height: () =&gt; &quot;&quot;,</span><br><span class="line">  language: () =&gt; &quot;&quot;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const codeEditorRef = ref();</span><br><span class="line">const codeEditor = ref();</span><br><span class="line">// 监听父组件传过来的语言，更新编译器语言</span><br><span class="line">watch(</span><br><span class="line">  () =&gt; props.language,</span><br><span class="line">  () =&gt; &#123;</span><br><span class="line">    monaco.editor.setModelLanguage(</span><br><span class="line">      // 踩坑一定要使用toRaw</span><br><span class="line">      toRaw(codeEditor.value).getModel(),</span><br><span class="line">      props.language</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line">//初始化代码编辑器实例</span><br><span class="line">const initCodeEditor = () =&gt; &#123;</span><br><span class="line">  if (!codeEditorRef.value) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  codeEditor.value = monaco.editor.create(codeEditorRef.value, &#123;</span><br><span class="line">    value: props.value,//值</span><br><span class="line">    language: props.language,//语言</span><br><span class="line">    codeLensFontSize: 32,</span><br><span class="line">    acceptSuggestionOnCommitCharacter: true,</span><br><span class="line">    automaticLayout: true,</span><br><span class="line">    minimap: &#123;</span><br><span class="line">      enabled: false,</span><br><span class="line">    &#125;,</span><br><span class="line">    theme: &quot;vs-dark&quot;,</span><br><span class="line">      //引入代码提示</span><br><span class="line">    ...Completion,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  initCodeEditor();</span><br><span class="line">  //监听值并返回给父组件</span><br><span class="line">  codeEditor.value.onDidChangeModelContent(() =&gt; &#123;</span><br><span class="line">    props.handleChange(toRaw(codeEditor.value).getValue());</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>父组件使用（使用了arco design组件库，按需转换)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;doQuestionView&quot;&gt;</span><br><span class="line">    &lt;a-row :gutter=&quot;24&quot;&gt;</span><br><span class="line">      &lt;a-col :md=&quot;12&quot; :xs=&quot;24&quot;&gt;</span><br><span class="line">        &lt;a-space direction=&quot;vertical&quot; size=&quot;small&quot; fill&gt;</span><br><span class="line">          &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">            &lt;span&gt;编程语言&lt;/span&gt;</span><br><span class="line">            &lt;a-select</span><br><span class="line">              placeholder=&quot;选择语言&quot;</span><br><span class="line">              :options=&quot;languageList&quot;</span><br><span class="line">              v-model=&quot;form.language&quot;</span><br><span class="line">              size=&quot;large&quot;</span><br><span class="line">              style=&quot;width: 200px&quot;</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;/a-select&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line"></span><br><span class="line">          &lt;code-editor</span><br><span class="line">            :language=&quot;form.language&quot;</span><br><span class="line">            :value=&quot;form.code&quot;</span><br><span class="line">            :handle-change=&quot;onCodeChange&quot;</span><br><span class="line">          &gt;&lt;/code-editor&gt;</span><br><span class="line">          &lt;a-button status=&quot;normal&quot; type=&quot;primary&quot; @click=&quot;handleSubmitCode()&quot;</span><br><span class="line">            &gt;提交代码</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">        &lt;/a-space&gt;</span><br><span class="line">      &lt;/a-col&gt;</span><br><span class="line">    &lt;/a-row&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import CodeEditor from &quot;@/components/CodeEditor.vue&quot;;</span><br><span class="line"></span><br><span class="line">const route = useRoute();</span><br><span class="line">const form = ref(&#123;</span><br><span class="line">  language: &quot;java&quot;,</span><br><span class="line">  code: &quot;&quot;,</span><br><span class="line">  questionId: questionId,</span><br><span class="line">&#125;);</span><br><span class="line">const languageList = ref&lt;Array&lt;string&gt;&gt;([&#x27;java&#x27;,&#x27;python&#x27;,&#x27;cpp&#x27;]);</span><br><span class="line">//提交代码</span><br><span class="line">const handleSubmitCode = async () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">//代码编辑器输入发生变化时触发</span><br><span class="line">const onCodeChange = (code: string) =&gt; &#123;</span><br><span class="line">  form.value.code = code;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#doQuestionView &#123;</span><br><span class="line">  max-width: 95%;</span><br><span class="line">  margin: 10px auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 第三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的实践使用</title>
      <link href="/2024/07/26/backend/git/git-1/"/>
      <url>/2024/07/26/backend/git/git-1/</url>
      
        <content type="html"><![CDATA[<h2 id="解决Git新建远程仓库后推送代码报错问题"><a href="#解决Git新建远程仓库后推送代码报错问题" class="headerlink" title="解决Git新建远程仓库后推送代码报错问题"></a>解决Git新建远程仓库后推送代码报错问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull git-test master --allow-unrelated-histories</span><br></pre></td></tr></table></figure><h2 id="解决Git已提交的文件如何重新忽略"><a href="#解决Git已提交的文件如何重新忽略" class="headerlink" title="解决Git已提交的文件如何重新忽略"></a>解决Git已提交的文件如何重新忽略</h2><blockquote><p>以忽略配置文件（存放了第三方秘钥和一些配置，不应该上传）为例，不用删除文件</p></blockquote><ol><li>同步远程仓库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><ol><li><p>清空本地目录全部缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> -r --cached   .</span><br></pre></td></tr></table></figure></li><li><p>将需要忽略的文件添加到.gitignore文件</p><p>~~~tex<br>application-pro.yml<br>application-dev.yml</p></li><li><p>提交并上传到远程仓库</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法题-链表反转</title>
      <link href="/2024/07/26/backend/sf/sf-1/"/>
      <url>/2024/07/26/backend/sf/sf-1/</url>
      
        <content type="html"><![CDATA[<h2 id="链表反转"><a href="#链表反转" class="headerlink" title="链表反转"></a>链表反转</h2><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给定一个单链表的头结点pHead(该头节点是有值的，比如在下图，它的val是1)，长度为n，反转该链表后，返回新链表的表头。</p><p>数据范围： 0≤<em>n</em>≤1000</p><p>要求：空间复杂度 <em>O</em>(1) ，时间复杂度O<em>(</em>n) 。</p><p>如当输入链表{1,2,3}时，</p><p>经反转后，原链表变为{3,2,1}，所以对应的输出为{3,2,1}。</p><p>以上转换过程如下图所示：</p><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/07/26/20240726-091125" alt="img"></p><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;1,2,3&#125;</span><br></pre></td></tr></table></figure><p>返回值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;3,2,1&#125;</span><br></pre></td></tr></table></figure><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><p>返回值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空链表则输出空      </span><br></pre></td></tr></table></figure><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>解题思路：</p><ol><li>通过转换过程可以发现，结果有点类似于先进后出，符合栈的特点，可以新建栈，将数据入栈出栈，并将最后的指向null，然后返回</li><li>新建一个链表，将数据挨着取出赋值，返回新链表</li><li>递归</li></ol><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *   int val;</span></span><br><span class="line"><span class="comment"> *   ListNode next = null;</span></span><br><span class="line"><span class="comment"> *   public ListNode(int val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *   &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> head ListNode类 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ListNode类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">ReverseList</span> <span class="params">(ListNode head)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">newHead</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 临时变量，存入下一个变量</span></span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> head.next;</span><br><span class="line">            head.next = newHead;</span><br><span class="line">            newHead = head;</span><br><span class="line">            head = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newHead;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 简单 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ts在Vue的使用</title>
      <link href="/2024/07/25/frontend/vue/ts/"/>
      <url>/2024/07/25/frontend/vue/ts/</url>
      
        <content type="html"><![CDATA[<h2 id="定义参数可选"><a href="#定义参数可选" class="headerlink" title="定义参数可选"></a>定义参数可选</h2><blockquote><p>在参数后加个问号，表示当前参数是可选的</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export const getHomeGoodsGuessLikeAPI = (data?: PageParams) =&gt; &#123;</span><br><span class="line">  return http&lt;PageResult&lt;GuessItem&gt;&gt;(&#123;</span><br><span class="line">    method: &#x27;GET&#x27;,</span><br><span class="line">    url: &#x27;/home/goods/guessLike&#x27;,</span><br><span class="line">    data,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将可选参数转换为必选参数"><a href="#将可选参数转换为必选参数" class="headerlink" title="将可选参数转换为必选参数"></a>将可选参数转换为必选参数</h2><p>使用ts提供的Required</p><ul><li>类型定义（加了问号，可选参数）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/** 通用分页参数类型 */</span><br><span class="line">export type PageParams = &#123;</span><br><span class="line">  /** 页码：默认值为 1 */</span><br><span class="line">  page?: number</span><br><span class="line">  /** 页大小：默认值为 10 */</span><br><span class="line">  pageSize?: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>实际使用（必选）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const pageParams: Required&lt;PageParams&gt; = &#123;</span><br><span class="line">  page: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ts属性扩展-amp-交叉类型"><a href="#ts属性扩展-amp-交叉类型" class="headerlink" title="ts属性扩展 (&amp;交叉类型)"></a>ts属性扩展 (&amp;交叉类型)</h2><p>在PageParams的属性上扩展上subType属性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">HotParams</span> = <span class="title class_">PageParams</span> &amp; &#123;</span><br><span class="line">  <span class="comment">/** Tab 项的 id，默认查询全部 Tab 项的第 1 页数据 */</span></span><br><span class="line">  subType?: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ts选取部分属性"><a href="#ts选取部分属性" class="headerlink" title="ts选取部分属性"></a>ts选取部分属性</h2><p>使用Pick<br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">ProfileParams</span> = <span class="title class_">Pick</span>&lt;</span><br><span class="line">    <span class="title class_">ProfileDetail</span>,</span><br><span class="line">    <span class="string">&#x27;nickname&#x27;</span> | <span class="string">&#x27;gender&#x27;</span> | <span class="string">&#x27;birthday&#x27;</span> | <span class="string">&#x27;profession&#x27;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebStorm使用过程遇到的问题</title>
      <link href="/2024/07/25/frontend/dev-util/webstorm/"/>
      <url>/2024/07/25/frontend/dev-util/webstorm/</url>
      
        <content type="html"><![CDATA[<h2 id="esLint-保存格式化操作"><a href="#esLint-保存格式化操作" class="headerlink" title="esLint 保存格式化操作"></a>esLint 保存格式化操作</h2><ul><li><p>搜索Code Quality Tools下的ESLint</p><blockquote><p>勾选 Run eslint —fix on save </p></blockquote></li><li><p>搜索JavaScript下的Prettier</p><blockquote><p> 勾选On ‘Reformat Code’ action</p></blockquote></li></ul><h2 id="解决webstorm注释时开头永远在当前行的第一个位置"><a href="#解决webstorm注释时开头永远在当前行的第一个位置" class="headerlink" title="解决webstorm注释时开头永远在当前行的第一个位置"></a>解决webstorm注释时开头永远在当前行的第一个位置</h2><p>1、打开设置搜索Code Generation<br>2、找到code style下的html<br>3、关闭以下两个选项</p><blockquote><p>Line comment at first column<br>Block comment at first column</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> devUtil </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合阿里云OSS</title>
      <link href="/2024/07/25/backend/springboot/ali-oss/"/>
      <url>/2024/07/25/backend/springboot/ali-oss/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文使用OSS进行文件上传，默认已有OSS相关信息</p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><ul><li>引入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云核心库，负责与阿里云http请求、异常处理等配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">al:</span></span><br><span class="line">  <span class="attr">oss:</span> <span class="comment">#存储</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">oss-cn-guangzhou.aliyuncs.com</span>   <span class="comment"># 域</span></span><br><span class="line">    <span class="attr">accessKeyId:</span>   <span class="comment"># 秘钥</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span>  <span class="comment"># 秘钥</span></span><br><span class="line">    <span class="attr">bucketName:</span>  <span class="comment"># 桶名</span></span><br><span class="line">    <span class="attr">url:</span>  <span class="comment"># 访问地址</span></span><br></pre></td></tr></table></figure><ul><li>配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(&quot;al.oss&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssConfig</span> &#123;</span><br><span class="line">    <span class="comment">//区域</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="comment">//访问id</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="comment">//访问秘钥</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="comment">//桶名称</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line">    <span class="comment">//访问URL</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//阿里存储工具类</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssTemplate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OssConfig ossConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(String fileName, InputStream inputStream)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建OSSClient</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(</span><br><span class="line">                ossConfig.getEndpoint(),</span><br><span class="line">                ossConfig.getAccessKeyId(),</span><br><span class="line">                ossConfig.getAccessKeySecret());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上传文件流</span></span><br><span class="line">        <span class="comment">// &lt;yourObjectName&gt;表示上传文件到OSS时需要指定包含文件后缀在内的完整路径，例如 images/2020/11/11/asdf.jpg。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">objectName</span> <span class="operator">=</span> <span class="string">&quot;al-tv/&quot;</span> + <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM/dd&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line">                + <span class="string">&quot;/&quot;</span> + System.currentTimeMillis() + fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// meta设置请求头,解决访问图片地址直接下载</span></span><br><span class="line">        <span class="type">ObjectMetadata</span> <span class="variable">meta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMetadata</span>();</span><br><span class="line">        meta.setContentType(getContentType(fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>))));</span><br><span class="line">        ossClient.putObject(ossConfig.getBucketName(), objectName, inputStream, meta);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭OSSClient。</span></span><br><span class="line">        ossClient.shutdown();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ossConfig.getUrl() + <span class="string">&quot;/&quot;</span> + objectName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文件类型</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContentType</span><span class="params">(String FilenameExtension)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.bmp&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/bmp&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.gif&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/gif&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.jpeg&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.jpg&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.png&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/jpg&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/jpg&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/uploadImage&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;OSS上传图片&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">uploadImage</span><span class="params">(MultipartFile uploadImage)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">imagePath</span> <span class="operator">=</span> <span class="built_in">this</span>.ossTemplate.upload(uploadImage.getOriginalFilename(), uploadImage.getInputStream());</span><br><span class="line">    System.out.println(imagePath);</span><br><span class="line">    <span class="keyword">return</span> Result.ok(imagePath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合阿里云Vod</title>
      <link href="/2024/07/25/backend/springboot/ali-vod/"/>
      <url>/2024/07/25/backend/springboot/ali-vod/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文使用VOD进行视频上传和视频点播，默认已有VOD相关信息</p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云核心库，负责与阿里云http请求、异常处理等配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.1/version&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.15.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为aliyun-sdk-vod-upload相关Maven坐标在中央仓库没有，因此需要我们自行引入</p><p>1、获取资源文件</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1UK20TSMZB-F6fkvY7bYpDA?pwd=0328">https://pan.baidu.com/s/1UK20TSMZB-F6fkvY7bYpDA?pwd=0328</a><br>提取码：0328<br>—来自百度网盘超级会员V4的分享</p></blockquote><p>2、配置Maven环境依赖（方便在任意地方使用mvc相关命令）</p><p>配置以下两个属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MAVEN_HOME :F:\work\tools\apache-maven-3.3.9-bin\apache-maven-3.3.9  </span><br><span class="line">Path :  %MAVEN_HOME\bin%;  </span><br></pre></td></tr></table></figure><p>3、安装Maven坐标</p><p>进入下载的jar包目录，进入控制台，运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-sdk-vod-upload -Dversion=1.4.15 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.15.jar</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">al:</span></span><br><span class="line">    <span class="attr">vod:</span> <span class="comment"># 视频</span></span><br><span class="line">    <span class="attr">regionId:</span> <span class="string">cn-shanghai</span> <span class="comment"># 视频点播所在地区</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="comment">#accessKeyId</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span> <span class="comment">#阿里云accessKey秘钥</span></span><br></pre></td></tr></table></figure><h2 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(&quot;al.vod&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodConfig</span> &#123;</span><br><span class="line">    <span class="comment">//区域</span></span><br><span class="line">    <span class="keyword">private</span> String regionId;</span><br><span class="line">    <span class="comment">//访问id</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="comment">//访问秘钥</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodTemplate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> VodConfig vodConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">public</span> DefaultAcsClient <span class="title function_">initVodClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DefaultProfile</span> <span class="variable">profile</span> <span class="operator">=</span> DefaultProfile.getProfile(</span><br><span class="line">                vodConfig.getRegionId(),</span><br><span class="line">                vodConfig.getAccessKeyId(),</span><br><span class="line">                vodConfig.getAccessKeySecret());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultAcsClient</span>(profile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上传视频,返回视频id</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadVideo</span><span class="params">(String fileName, InputStream inputStream)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> fileName.substring(<span class="number">0</span>, fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="type">UploadStreamRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadStreamRequest</span>(</span><br><span class="line">                vodConfig.getAccessKeyId(),</span><br><span class="line">                vodConfig.getAccessKeySecret(),</span><br><span class="line">                title,</span><br><span class="line">                fileName,</span><br><span class="line">                inputStream);</span><br><span class="line">        <span class="type">UploadVideoImpl</span> <span class="variable">uploader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadVideoImpl</span>();</span><br><span class="line">        <span class="type">UploadStreamResponse</span> <span class="variable">response</span> <span class="operator">=</span> uploader.uploadStream(request);</span><br><span class="line">        <span class="keyword">return</span> response.getVideoId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取播放凭证函数</span></span><br><span class="line">    <span class="keyword">public</span> GetVideoPlayAuthResponse <span class="title function_">getVideoPlayAuth</span><span class="params">(String videoId)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">GetVideoPlayAuthRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetVideoPlayAuthRequest</span>();</span><br><span class="line">        request.setVideoId(videoId);</span><br><span class="line">        <span class="keyword">return</span> initVodClient().getAcsResponse(request);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value = &quot;/uploadVideo&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;VOD上传视频&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">uploadVideo</span><span class="params">(MultipartFile uploadVideo)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">size</span> <span class="operator">=</span> uploadVideo.getSize();</span><br><span class="line">    <span class="type">String</span> <span class="variable">videoId</span> <span class="operator">=</span> <span class="built_in">this</span>.vodTemplate.uploadVideo(uploadVideo.getOriginalFilename(), uploadVideo.getInputStream());</span><br><span class="line">    System.out.println(videoId);</span><br><span class="line">    <span class="keyword">return</span> Result.ok(videoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合支付宝沙箱支付的简单使用</title>
      <link href="/2024/07/25/backend/springboot/ali-pay/"/>
      <url>/2024/07/25/backend/springboot/ali-pay/</url>
      
        <content type="html"><![CDATA[<h2 id="1-登录-支付宝-开放平台"><a href="#1-登录-支付宝-开放平台" class="headerlink" title="1.登录 支付宝 开放平台"></a>1.登录 <a href="https://open.alipay.com/develop/manage">支付宝 开放平台</a></h2><ul><li>登录后加入控制台、滑到尾部，进入沙箱环境。</li><li>启动公钥模式，查看消息，复制应用私钥、支付宝公钥备用</li><li>复制APPID、支付宝网关地址备用</li></ul><h2 id="2-基本配置"><a href="#2-基本配置" class="headerlink" title="2. 基本配置"></a>2. 基本配置</h2><ul><li>引入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支付宝支付依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alipay.sdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alipay-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.35.79.ALL<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">al:</span></span><br><span class="line">  <span class="attr">pay:</span></span><br><span class="line">    <span class="attr">appId:</span> <span class="string">沙箱的appid</span></span><br><span class="line">    <span class="attr">appPrivateKey:</span> <span class="string">自己的私钥</span></span><br><span class="line">    <span class="attr">alipayPublicKey:</span> <span class="string">支付宝公钥</span></span><br><span class="line">    <span class="comment"># 异步通知地址(公网，开发时使用内网穿透)</span></span><br><span class="line">    <span class="attr">notifyBaseUrl:</span>  <span class="string">http://3244d6b3.r8.cpolar.top</span></span><br><span class="line">    <span class="comment"># 异步通知地址(自己设置的接口)</span></span><br><span class="line">    <span class="attr">notifyUrl:</span> <span class="string">/admin/system/ali/notify</span></span><br><span class="line">    <span class="comment"># 支付成功后跳转的页面</span></span><br><span class="line">    <span class="attr">returnUrl:</span> <span class="string">http://localhost:8080/dev/api/order/pay/success</span></span><br><span class="line">    <span class="comment"># 网关</span></span><br><span class="line">    <span class="attr">gatewayUrl:</span> <span class="string">https://openapi-sandbox.dl.alipaydev.com/gateway.do</span></span><br></pre></td></tr></table></figure><ul><li>配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(&quot;al.pay&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 沙箱应用id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 公钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String alipayPublicKey;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String appPrivateKey;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后端公网地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String notifyBaseUrl;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自己设置的异步回调接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String notifyUrl;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String returnUrl;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支付网关</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String gatewayUrl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>回调函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支付宝支付异步回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/notify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">payNotify</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;trade_status&quot;</span>).equals(<span class="string">&quot;TRADE_SUCCESS&quot;</span>)) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========支付宝异步回调========&quot;</span>);</span><br><span class="line">        Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;String, String[]&gt; requestParams = request.getParameterMap();</span><br><span class="line">        <span class="keyword">for</span> (String name : requestParams.keySet()) &#123;</span><br><span class="line">            params.put(name, request.getParameter(name));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sign</span> <span class="operator">=</span> params.get(<span class="string">&quot;sign&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> AlipaySignature.getSignCheckContentV1(params);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">checkSignature</span> <span class="operator">=</span> AlipaySignature.rsa256CheckContent(content, sign, payConfig.getAlipayPublicKey(), <span class="string">&quot;UTF-8&quot;</span>); <span class="comment">// 验证签名</span></span><br><span class="line">        <span class="comment">// 支付宝验签</span></span><br><span class="line">        <span class="keyword">if</span> (checkSignature) &#123;</span><br><span class="line">            <span class="comment">// 验签通过</span></span><br><span class="line">            System.out.println(<span class="string">&quot;交易名称: &quot;</span> + params.get(<span class="string">&quot;subject&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;交易状态: &quot;</span> + params.get(<span class="string">&quot;trade_status&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;支付宝交易凭证号: &quot;</span> + params.get(<span class="string">&quot;trade_no&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;商户订单号: &quot;</span> + params.get(<span class="string">&quot;out_trade_no&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;交易金额: &quot;</span> + params.get(<span class="string">&quot;total_amount&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;买家付款时间: &quot;</span> + params.get(<span class="string">&quot;gmt_payment&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;买家付款金额: &quot;</span> + params.get(<span class="string">&quot;buyer_pay_amount&quot;</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">tradeNo</span> <span class="operator">=</span> params.get(<span class="string">&quot;out_trade_no&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">gmtPayment</span> <span class="operator">=</span> params.get(<span class="string">&quot;gmt_payment&quot;</span>);</span><br><span class="line">            <span class="comment">// 更新订单状态为已支付，设置支付信息</span></span><br><span class="line">            <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> ordersService.getById(tradeNo);</span><br><span class="line">            orders.setStatus(<span class="number">1</span>);</span><br><span class="line">            ordersService.updateById(orders);</span><br><span class="line">            <span class="comment">//更新用户会员信息</span></span><br><span class="line">            <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> sysUserService.getById(orders.getUserId());</span><br><span class="line">            sysUser.setVip(<span class="number">1</span>);</span><br><span class="line">            sysUserService.updateById(sysUser);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、扫码支付"><a href="#3、扫码支付" class="headerlink" title="3、扫码支付"></a>3、扫码支付</h2><blockquote><p>扫码支付是根据订单号、订单金额以及一些非必要配置获取一个支付链接，然后利用第三方QR库将链接转化为二维码返回给用户扫码支付</p></blockquote><ul><li>引入QR生成库依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        生成二维码依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.zxing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>扫码支付工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿里支付二维码工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ALiPayUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FORMAT</span> <span class="operator">=</span> <span class="string">&quot;JSON&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line">    <span class="comment">//签名方式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SIGN_TYPE</span> <span class="operator">=</span> <span class="string">&quot;RSA2&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PayConfig payConfig;</span><br><span class="line">    <span class="keyword">private</span>  AlipayConfig <span class="title function_">getAlipayConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AlipayConfig</span> <span class="variable">alipayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayConfig</span>();</span><br><span class="line">        alipayConfig.setServerUrl(payConfig.getGatewayUrl());</span><br><span class="line">        alipayConfig.setAppId(payConfig.getAppId());</span><br><span class="line">        alipayConfig.setPrivateKey(payConfig.getAppPrivateKey());</span><br><span class="line">        alipayConfig.setFormat(FORMAT);</span><br><span class="line">        alipayConfig.setAlipayPublicKey(payConfig.getAlipayPublicKey());</span><br><span class="line">        alipayConfig.setCharset(CHARSET);</span><br><span class="line">        alipayConfig.setSignType(SIGN_TYPE);</span><br><span class="line">        <span class="keyword">return</span> alipayConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] getPayQR(Long orderNo) <span class="keyword">throws</span> AlipayApiException &#123;</span><br><span class="line">        <span class="comment">// 初始化SDK</span></span><br><span class="line">        <span class="type">AlipayClient</span> <span class="variable">alipayClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAlipayClient</span>(getAlipayConfig());</span><br><span class="line">        <span class="comment">// 构造请求参数以调用接口</span></span><br><span class="line">        <span class="type">AlipayTradePrecreateRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePrecreateRequest</span>();</span><br><span class="line">        <span class="type">AlipayTradePrecreateModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePrecreateModel</span>();</span><br><span class="line">        <span class="comment">// 设置订单标题</span></span><br><span class="line">        model.setSubject(<span class="string">&quot;阿良TV会员充值&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置商户订单号</span></span><br><span class="line">        model.setOutTradeNo(String.valueOf(orderNo));</span><br><span class="line">        <span class="comment">// 设置订单总金额</span></span><br><span class="line">        model.setTotalAmount(<span class="string">&quot;6.6&quot;</span>);</span><br><span class="line">        request.setBizModel(model);</span><br><span class="line">        <span class="comment">//设置异步回调地址</span></span><br><span class="line">        request.setNotifyUrl(payConfig.getNotifyBaseUrl() + payConfig.getNotifyUrl());</span><br><span class="line">        <span class="type">AlipayTradePrecreateResponse</span> <span class="variable">response</span> <span class="operator">=</span> alipayClient.execute(request);</span><br><span class="line">        System.out.println(response.getBody());</span><br><span class="line">        <span class="keyword">if</span> (response.isSuccess()) &#123;</span><br><span class="line">            <span class="comment">//获得二维码支付地址</span></span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">bean</span> <span class="operator">=</span> JSONUtil.toBean(response.getBody(), JSONObject.class);</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">realData</span> <span class="operator">=</span> (JSONObject) bean.get(<span class="string">&quot;alipay_trade_precreate_response&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">qrCode</span> <span class="operator">=</span> (String) realData.get(<span class="string">&quot;qr_code&quot;</span>);</span><br><span class="line">            <span class="comment">//生成二维码</span></span><br><span class="line">            <span class="type">BufferedImage</span> <span class="variable">generate</span> <span class="operator">=</span> QrCodeUtil.generate(<span class="comment">//</span></span><br><span class="line">                qrCode, <span class="comment">//二维码内容</span></span><br><span class="line">                QrConfig.create().setImg(<span class="string">&quot;/www/wwwroot/al-tv/logo.png&quot;</span>)<span class="comment">//附带logo</span></span><br><span class="line">            );</span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">outputStream</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="comment">//返回数据给后端</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ImageIO.write(generate, <span class="string">&quot;png&quot;</span>, outputStream);</span><br><span class="line">                <span class="keyword">return</span> outputStream.toByteArray();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;支付宝接口调用失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven主包体积优化</title>
      <link href="/2024/07/25/backend/maven/maven-2/"/>
      <url>/2024/07/25/backend/maven/maven-2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在Maven工程中，一般打包后的jar包体积都是二三十MB起步，但占大头的基本是一些引入的第三方jar包，自己编写的代码只占据极小部分。特别是一些较大的工程，打包后的包体积分分钟七八十MB，但实际代码只占不到1MB，显的很臃肿。本文通过优化Maven聚合工程的打包方式，将其他包抽取到lib包，并将配置文件忽略，实现了主Jar包从原本的88MB到不到200KB，废话不多说，直接开干。</p><h2 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h2><h3 id="最终在pom-xml的build标签下的代码"><a href="#最终在pom-xml的build标签下的代码" class="headerlink" title="最终在pom.xml的build标签下的代码"></a>最终在pom.xml的build标签下的代码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>aliang-tv<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1、编译出不带 lib 文件夹的Jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--表示编译版本配置有效--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--引入第三方jar包时,不添加则引入的第三方jar不会被打入jar包中--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeSystemScope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">includeSystemScope</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--排除第三方jar文件--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 字符集编码 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用来传递编译器自身不包含但是却支持的参数选项 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">compilerArguments</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">verbose</span>/&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- windwos环境（二选一）为;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bootclasspath</span>&gt;</span>$&#123;java.home&#125;/lib/rt.jar;$&#123;java.home&#125;/lib/jce.jar\;$&#123;java.home&#125;/lib/resources.jar<span class="tag">&lt;/<span class="name">bootclasspath</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- Linux环境（二选一）为: --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--                        &lt;bootclasspath&gt;$&#123;java.home&#125;/lib/rt.jar:$&#123;java.home&#125;/lib/jce.jar&lt;/bootclasspath&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">compilerArguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 3、将所有依赖的jar文件复制到target/lib目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--复制到哪个路径，$&#123;project.build.directory&#125; 缺醒为 target，其他内置参数见下面解释--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">overWriteReleases</span>&gt;</span>false<span class="tag">&lt;/<span class="name">overWriteReleases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">overWriteSnapshots</span>&gt;</span>false<span class="tag">&lt;/<span class="name">overWriteSnapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">overWriteIfNewer</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overWriteIfNewer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 4、指定启动类，指定配置文件，将依赖打成外部jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 是否要把第三方jar加入到类构建路径 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 外部依赖jar包的最终位置 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 项目启动类 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.aliang.tv.ServiceApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--资源文件不打进jar包中，做到配置跟项目分离的效果--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 业务jar中过滤application.properties/yml文件，在jar包外控制 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>*.yml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>如果插件爆红，主要是你相关插件的Jar没有下，可以在Maven中央仓库找到相关插件的Maven依赖，复制到<strong>dependencies</strong>标签里面后，重新加载下载。</li><li>该打包方式会忽略Springboot配置文件，在上线时，因为Springboot运行时，会先找到当前目录下的lib包加载相关包，到config目录加载配置文件，所以需要把配置文件放到主jar包所在目录下的config目录。</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java8-Stream流的使用</title>
      <link href="/2024/07/25/backend/java/Stream/"/>
      <url>/2024/07/25/backend/java/Stream/</url>
      
        <content type="html"><![CDATA[<h2 id="1、Stream流方法介绍"><a href="#1、Stream流方法介绍" class="headerlink" title="1、Stream流方法介绍"></a>1、Stream流方法介绍</h2><p><img src="https://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/07/25/20240725-135827.png" alt="image-20240110212328623"></p><blockquote><p>  注意点：<br>  count和forEach方法为总结方法，一使用即总结流的使用</p></blockquote><h2 id="2、coun方法：统计元素个数"><a href="#2、coun方法：统计元素个数" class="headerlink" title="2、coun方法：统计元素个数"></a>2、coun方法：统计元素个数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;张老三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;张小三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;赵五&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;张六&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;王八&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> list.stream().count();</span><br><span class="line">System.out.println(<span class="string">&quot;集合中的元素个数是：&quot;</span> + count);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    集合中的元素个数是：<span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="3、foreach方法：逐一处理流中的元素"><a href="#3、foreach方法：逐一处理流中的元素" class="headerlink" title="3、foreach方法：逐一处理流中的元素"></a>3、foreach方法：逐一处理流中的元素</h2><blockquote><p>  注意点：1.此方法并不保证元素的逐一消费动作在流中是有序进行的（元素可能丢失）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;张老三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;张小三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;赵五&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;张六&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;王八&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 函数模型：获取流 --&gt; 注意消费流中的元素</span></span><br><span class="line">list.stream().forEach((String name)-&gt;&#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    张老三</span><br><span class="line">    张小三</span><br><span class="line">    李四</span><br><span class="line">    赵五</span><br><span class="line">    张六</span><br><span class="line">    王八</span><br></pre></td></tr></table></figure><h2 id="3、filter方法（过滤元素）"><a href="#3、filter方法（过滤元素）" class="headerlink" title="3、filter方法（过滤元素）"></a>3、filter方法（过滤元素）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">       <span class="comment">// 获取stream流</span></span><br><span class="line">       Stream&lt;String&gt; stream = Stream.of(<span class="string">&quot;张老三&quot;</span>, <span class="string">&quot;张小三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;赵五&quot;</span>, <span class="string">&quot;刘六&quot;</span>, <span class="string">&quot;王七&quot;</span>);</span><br><span class="line">       <span class="comment">// 需求：过去出姓张的元素</span></span><br><span class="line">       stream.filter((String name)-&gt;&#123;</span><br><span class="line">           <span class="keyword">return</span> name.startsWith(<span class="string">&quot;张&quot;</span>);</span><br><span class="line">       &#125;).forEach((String name)-&gt;&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;流中的元素&quot;</span> + name);</span><br><span class="line">       &#125;);</span><br><span class="line"><span class="comment">//可简写为</span></span><br><span class="line">stream.filter( name -&gt;name.startsWith(<span class="string">&quot;张&quot;</span>))           .forEach((String name)-&gt;&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;流中的元素&quot;</span> + name);</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h2 id="4、limit方法（获取前几个元素-）"><a href="#4、limit方法（获取前几个元素-）" class="headerlink" title="4、limit方法（获取前几个元素 ）"></a>4、limit方法（获取前几个元素 ）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取流的长度</span></span><br><span class="line">Stream&lt;String&gt; stream1 = Stream.of(<span class="string">&quot;张老三&quot;</span>, <span class="string">&quot;张小三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;赵五&quot;</span>, <span class="string">&quot;刘六&quot;</span>, <span class="string">&quot;王七&quot;</span>);</span><br><span class="line"><span class="comment">// 需求：保留前三个元素</span></span><br><span class="line">stream1.limit(<span class="number">3</span>).forEach((String name)-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;流中的前三个元素是：&quot;</span> + name);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    流中的前三个元素是：张老三</span><br><span class="line">    流中的前三个元素是：张小三</span><br><span class="line">    流中的前三个元素是：李四</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、skip方法"><a href="#5、skip方法" class="headerlink" title="5、skip方法"></a>5、skip方法</h2><p>跳过前几个元素<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取stream流</span></span><br><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">&quot;张老三&quot;</span>, <span class="string">&quot;张小三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;赵五&quot;</span>, <span class="string">&quot;刘六&quot;</span>, <span class="string">&quot;王七&quot;</span>);</span><br><span class="line"> </span><br><span class="line">stream.skip(<span class="number">3</span>).forEach((String name)-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;跳过前三个，打印剩下的&quot;</span> + name);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    跳过前三个，打印剩下的赵五</span><br><span class="line">    跳过前三个，打印剩下的刘六</span><br><span class="line">    跳过前三个，打印剩下的王七</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="6、map方法"><a href="#6、map方法" class="headerlink" title="6、map方法"></a>6、map方法</h2><p>类型转化<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取Stream流</span></span><br><span class="line">Stream&lt;String&gt; stream1 = Stream.of(<span class="string">&quot;11&quot;</span>,<span class="string">&quot;22&quot;</span>,<span class="string">&quot;33&quot;</span>,<span class="string">&quot;44&quot;</span>,<span class="string">&quot;55&quot;</span>);</span><br><span class="line"><span class="comment">// 需求：把stream1流中的元素转换为int类型</span></span><br><span class="line">stream1.map((String s)-&gt;&#123;</span><br><span class="line">   <span class="keyword">return</span> Integer.parseInt(s); <span class="comment">// 将String类型的s进行转换为Integer类型的元素，并返回</span></span><br><span class="line">&#125;).forEach((Integer i)-&gt;&#123;</span><br><span class="line">    System.out.println(i);  <span class="comment">// 将转换后的int类型的元素逐一输出</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    <span class="number">11</span></span><br><span class="line">    <span class="number">22</span></span><br><span class="line">    <span class="number">33</span></span><br><span class="line">    <span class="number">44</span></span><br><span class="line">    <span class="number">55</span></span><br></pre></td></tr></table></figure></p><h2 id="7、concat方法"><a href="#7、concat方法" class="headerlink" title="7、concat方法"></a>7、concat方法</h2><p>合并两个流  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> Stream&lt;String&gt; stream1 = Stream.of(<span class="string">&quot;11&quot;</span>,<span class="string">&quot;22&quot;</span>,<span class="string">&quot;33&quot;</span>,<span class="string">&quot;44&quot;</span>,<span class="string">&quot;55&quot;</span>);</span><br><span class="line">Stream&lt;String&gt; stream2 = Stream.of(<span class="string">&quot;张颜宇&quot;</span>, <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;赵五&quot;</span>, <span class="string">&quot;刘六&quot;</span>, <span class="string">&quot;王七&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 需求：合并两个流</span></span><br><span class="line">Stream&lt;String&gt; stream = Stream.concat(stream1,stream2);</span><br><span class="line">stream.forEach((String name)-&gt;&#123;</span><br><span class="line">    System.out.print(name);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line">    <span class="number">1122334455</span>张颜宇张三李四赵五刘六王七</span><br></pre></td></tr></table></figure><h2 id="8、collect方法"><a href="#8、collect方法" class="headerlink" title="8、collect方法"></a>8、collect方法</h2><p>收集流    </p><blockquote><p>  collect(Collectors.toSet())转为set集合<br>  collect(Collectors.toList())转为list集合</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list2.add(<span class="string">&quot;张老三&quot;</span>);</span><br><span class="line">list2.add(<span class="string">&quot;张小三&quot;</span>);</span><br><span class="line">list2.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">list2.add(<span class="string">&quot;赵五&quot;</span>);</span><br><span class="line">list2.add(<span class="string">&quot;张六&quot;</span>);</span><br><span class="line">list2.add(<span class="string">&quot;王八&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 需求：过滤出姓张的并且长度为3的元素</span></span><br><span class="line">Stream&lt;String&gt; stream = list2.stream().filter((String name) -&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> name.startsWith(<span class="string">&quot;张&quot;</span>);</span><br><span class="line">&#125;).filter((String name) -&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> name.length() == <span class="number">3</span>;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// stream 收集到单列集合中</span></span><br><span class="line">List&lt;String&gt; list = stream.collect(Collectors.toList());</span><br><span class="line">System.out.println(list);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// stream 收集到单列集合中</span></span><br><span class="line">Set&lt;String&gt; set = stream.collect(Collectors.toSet());</span><br><span class="line">System.out.println(set);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职场之world常见问题</title>
      <link href="/2024/06/03/order/work-world/"/>
      <url>/2024/06/03/order/work-world/</url>
      
        <content type="html"><![CDATA[<h2 id="1-work表格吞字不换行"><a href="#1-work表格吞字不换行" class="headerlink" title="1.work表格吞字不换行"></a>1.work表格吞字不换行</h2><p><font color='red'>原因：</font>表格设置了行固定高度，文字一旦超过这个高度就会隐藏</p><p><font color='Peach '>解决：</font> 选中表格 -》 右键-》 选择表格属性 -》 选择行-》 行高值选择最小值</p>]]></content>
      
      
      <categories>
          
          <category> 职场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 职场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>历时两天半，我做了一件以前没完成的事</title>
      <link href="/2024/06/02/backend/springboot/springboot-3/"/>
      <url>/2024/06/02/backend/springboot/springboot-3/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​        作为一个i人，我比较喜欢在少人或者无人的地方学习、而我们学校图书馆比较小（虽然已经在扩建了），平时人还比较少，一旦碰到四六级考试、二级考试，图书馆人员超多，这对我这个i人来说简直是噩梦。这事怎么办？在宿舍学不下去，退而其次的就是去空教室，而去找空教室最笨的方法是一栋栋楼去找，于是我心里萌发了一个念头，能不能做一个空教室查询小系统，快速查询某天的空教室数据。数据来源可以查教务系统的全校课表数据，理论存在，实践开始。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h3><p>​        通过跟踪教务系统请求连接，我发现全部连接都会用到同一个Cookie，数据类似于<strong>JSESSIONID=EA88D64375DA6332482CB4BB94054F</strong>，经过PostMan测试，只要有这个Cookie以及一些必要参数就可以查询到全校课表数据。那该如何获取这个Cookie以及验证呢？</p><h3 id="验证码获取链接分析"><a href="#验证码获取链接分析" class="headerlink" title="验证码获取链接分析"></a>验证码获取链接分析</h3><p>验证码请求链接： GET请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://jwgl.gzist.edu.cn/yzm?d=1717029029180</span><br></pre></td></tr></table></figure><p>通过请求这个链接，就可以获取到验证码图片，同时，如果请求时没有携带Cookie的JSESSIONID，在请求后会返回一个Cookie，就会有JSESSIONID，如果验证通过，就可以用这个JSESSIONID请求数据。</p><h3 id="登录分析"><a href="#登录分析" class="headerlink" title="登录分析"></a>登录分析</h3><p>登录链接：POST请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://jwgl.gzist.edu.cn/login!doLogin.action</span><br></pre></td></tr></table></figure><p>请求参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">account: 20210407430417</span><br><span class="line">pwd: bGtsMTMxNDUyMGx5cQ==</span><br><span class="line">verifycode: n3d</span><br></pre></td></tr></table></figure><blockquote><p>表单参数，其中pwd使用了Base64加密，可通过教务系统源码直接获取到相关JS文件。</p></blockquote><p>请求头：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie:  JSESSIONID=DDF343E936AC1AB71D087E2EA6A3F2F8; </span><br></pre></td></tr></table></figure><blockquote><p>JSESSIONID的值取自验证码请求时获取到的</p></blockquote><p>返回参数：验证成功后返回数据如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;status&quot;:&quot;y&quot;,&quot;msg&quot;:&quot;/login!welcome.action&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="全校课表链接分析"><a href="#全校课表链接分析" class="headerlink" title="全校课表链接分析"></a>全校课表链接分析</h3><div class="table-container"><table><thead><tr><th style="text-align:center">字段</th><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">请求地址</td><td style="text-align:center"><a href="http://jwgl.gzist.edu.cn/xsgrkbcx!getQxkbDataList.action">http://jwgl.gzist.edu.cn/xsgrkbcx!getQxkbDataList.action</a></td><td style="text-align:center">全校课表请求地址</td></tr><tr><td style="text-align:center">请求类型</td><td style="text-align:center">POST</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">请求头</td><td style="text-align:center">Cookie:  JSESSIONID=DDF343E936AC1AB71D087E2EA6A3F2F8;</td><td style="text-align:center">这个是必须填，其他字段有系统自己填</td></tr></tbody></table></div><p>请求数据（表格数据）字段说明</p><div class="table-container"><table><thead><tr><th style="text-align:center">字段</th><th style="text-align:center">说明</th><th style="text-align:center">常用数据案例</th></tr></thead><tbody><tr><td style="text-align:center">xnxqdm</td><td style="text-align:center">学年学期代码</td><td style="text-align:center">2023-2024第2学期的为 202302</td></tr><tr><td style="text-align:center">xqdm</td><td style="text-align:center">校区代码</td><td style="text-align:center">白云校区的为 01</td></tr><tr><td style="text-align:center">zc</td><td style="text-align:center"><strong>周次</strong></td><td style="text-align:center">第14周为 14</td></tr><tr><td style="text-align:center">xq</td><td style="text-align:center"><strong>星期</strong></td><td style="text-align:center">星球一为 1</td></tr><tr><td style="text-align:center">kcdm</td><td style="text-align:center">课程</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">kkyxdm</td><td style="text-align:center">开课单位</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">kkjysdm</td><td style="text-align:center">教研室</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">jcdm</td><td style="text-align:center"><strong>节次代码</strong></td><td style="text-align:center">12节为0102</td></tr><tr><td style="text-align:center">gnqdm</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">rq</td><td style="text-align:center">日期</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">jzwdm</td><td style="text-align:center"><strong>教学楼代码</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">kcrwdm</td><td style="text-align:center">开课编号</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">teadm</td><td style="text-align:center">教师代码</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><font color='red'>page</font></td><td style="text-align:center">页码</td><td style="text-align:center">必须字段</td></tr><tr><td style="text-align:center"><font color='red'>rows</font></td><td style="text-align:center">数据条数</td><td style="text-align:center">必须字段</td></tr><tr><td style="text-align:center">sort</td><td style="text-align:center">kxh</td><td style="text-align:center">排序字段 ，对应row的字段</td></tr><tr><td style="text-align:center">order</td><td style="text-align:center">asc</td><td style="text-align:center">排序规则</td></tr><tr><td style="text-align:center">queryParams%5BprimarySort%5D</td><td style="text-align:center">固定字段</td><td style="text-align:center">+dgksdm+asc</td></tr></tbody></table></div><p>教学楼代码参考：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;02&#x27;</span>&gt;</span>02-11栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;03&#x27;</span>&gt;</span>03-12栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;04&#x27;</span>&gt;</span>04-2栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;05&#x27;</span>&gt;</span>05-3栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;06&#x27;</span>&gt;</span>06-4栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;07&#x27;</span>&gt;</span>07-图书馆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;08&#x27;</span>&gt;</span>08-6栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;09&#x27;</span>&gt;</span>09-7栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;10&#x27;</span>&gt;</span>10-8栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;11&#x27;</span>&gt;</span>11-9栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;12&#x27;</span>&gt;</span>12-大操场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;13&#x27;</span>&gt;</span>13-电子楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;14&#x27;</span>&gt;</span>14-篮球场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;15&#x27;</span>&gt;</span>15-排球场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;16&#x27;</span>&gt;</span>16-体育馆(羽毛球)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;17&#x27;</span>&gt;</span>17-网球场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;18&#x27;</span>&gt;</span>18-校外<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102109121&#x27;</span>&gt;</span>19-8栋副楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102109134&#x27;</span>&gt;</span>20-足球场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102109139&#x27;</span>&gt;</span>21-7栋副楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102109140&#x27;</span>&gt;</span>22-21栋副楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102109146&#x27;</span>&gt;</span>23-汽修楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;102880092&#x27;</span>&gt;</span>24-13栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;103141814&#x27;</span>&gt;</span>25-行政楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104341503&#x27;</span>&gt;</span>26-30栋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104414847&#x27;</span>&gt;</span>27-工程楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104415261&#x27;</span>&gt;</span>28-34栋宿舍<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104419742&#x27;</span>&gt;</span>29-33栋宿舍<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104421607&#x27;</span>&gt;</span>30-增城<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104966015&#x27;</span>&gt;</span>31-教学楼01<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104968017&#x27;</span>&gt;</span>32-行政楼<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104968018&#x27;</span>&gt;</span>33-学生宿舍05<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104968032&#x27;</span>&gt;</span>34-操场<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;104969580&#x27;</span>&gt;</span>35-校外<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;105067380&#x27;</span>&gt;</span>36-校内实践场地<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure><p>返回数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">130</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rows&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;kcrwdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1137563&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dgksdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2839124&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xnxqmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-2024-2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxbmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21计科4班&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxbrs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;61&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pkrs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;61&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;软件项目管理课程设计&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;teaxms&quot;</span><span class="punctuation">:</span> <span class="string">&quot;李粘粘&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xq&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jcdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0910&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxcdmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;行政楼308(I类机房）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kxh&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxhjmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;实践教学&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;flfzmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sknrjj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;确定项目主题，分析项目功能需求、性能需求等项目需求，做好项目可行性分析及编制项目需求报告。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pkrq&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-30&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xnxqdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;202302&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rownum_&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><ul><li>前端：Vue + ElementUI + Axios</li><li>后端 Springboot + hutool</li></ul><blockquote><p>hutool是一个小而全的第三方Java工具库，可以帮助我们简化很多代码开发，这里主要用hutool向教务系统请求数据</p></blockquote><h3 id="实现逻辑"><a href="#实现逻辑" class="headerlink" title="实现逻辑"></a>实现逻辑</h3><blockquote><p>具体实现看源码,这里介绍一下逻辑</p></blockquote><p>1、前端向后端请求验证码。</p><p>2、后端向教务系统获取验证码以及Cookie，通过输出流返回验证码图片数据。</p><blockquote><p>说明：由于个人能力问题，不能很好的解决Cookie携带问题，直接把这个Cookie赋值给静态变量，后续请求Cookie赋值直接携使用静态变量。</p></blockquote><p>3、用户输入学号、密码、验证码，密码经过加密后，向后端请求登录。</p><p>4、后端接受数据后，封装数据以及请求头，向教务系统请求登录。如果返回数据含有 <strong>/login!welcome.action</strong> 字符，说明登录成功，cookie可以使用，返回成功，否则返回失败，刷新登录页面</p><p>5、登录成功后，跳转到空教室显示页面，选择请求参数，点击查询开始查询。</p><p>6、后端封装请求参数以及请求头，获取全校课表数据并处理数据后返回给前端。</p><blockquote><p>将课表数据进行流式处理、按栋楼、周次、星期、节次分组后，根据栋楼查询该楼的教室数据，与查询数据进行比较，将出现的教室号状态改为1。然后获取教室号状态为0的，这些就是空教室数据，封装成结果集数据后返回给前端</p></blockquote><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/06/02/20240602-211858.png" alt="image-20240602211851880"></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/06/02/20240602-211953.png" alt="image-20240602211952649"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Vue </tag>
            
            <tag> Element UI </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElementUI表单常用组件</title>
      <link href="/2024/05/18/frontend/element-ui/elmentui-1/"/>
      <url>/2024/05/18/frontend/element-ui/elmentui-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><pre><code>在使用ElementUI组件的过程中，官方文档部分组件的使用方法不够明确，因此写下此文，总结常用组件的使用方法。</code></pre><h2 id="级联选择器-el-cascader"><a href="#级联选择器-el-cascader" class="headerlink" title="级联选择器 el-cascader"></a>级联选择器 el-cascader</h2><h3 id="自定义键名"><a href="#自定义键名" class="headerlink" title="自定义键名"></a>自定义键名</h3><blockquote><p>以三级地址选择器为例</p></blockquote><p>数据来源：<a href="https://gitee.com/shibalover/address">全国各省行政区划（省-地-县-乡-村）数据（2023）: 全国区域划分数据</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;110000000000&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;北京市&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-cascader</span><br><span class="line">             :props=&quot;customProps&quot;</span><br><span class="line">             :options=&quot;optionsList&quot;</span><br><span class="line">             @change=&quot;handleChange&quot;</span><br><span class="line">             /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //引入三级地区划分数据</span><br><span class="line">    import addressJSONData from &#x27;@/assets/json/address.json&#x27;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                parentAddress: null, //选择的地址字符串</span><br><span class="line">                customProps: &#123;  //自定义键名</span><br><span class="line">                    value: &#x27;name&#x27;,   // 自定义当前数组的键名</span><br><span class="line">                    label: &#x27;name&#x27;,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            handleChange(value) &#123; // [&#x27;北京市&#x27;, &#x27;市辖区&#x27;, &#x27;东城区&#x27;]</span><br><span class="line">                this.parentAddress = value.join(&#x27;&#x27;) //拼接成北京市市辖区东城区</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Element UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Element UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-Plus使用问题合集</title>
      <link href="/2024/05/14/backend/springboot/my-batis-plus-1/"/>
      <url>/2024/05/14/backend/springboot/my-batis-plus-1/</url>
      
        <content type="html"><![CDATA[<h2 id="1、设置自动递增后，生成的Id很长，且随机"><a href="#1、设置自动递增后，生成的Id很长，且随机" class="headerlink" title="1、设置自动递增后，生成的Id很长，且随机"></a>1、设置自动递增后，生成的Id很长，且随机</h2><blockquote><p>原因：</p><p>1、数据库设置字段自动递增后，没有在Java实体类加相应注解。</p></blockquote><p>PS：自 3.3.0 开始,默认使用雪花算法+UUID(不含中划线)</p><font color='Peach '>解决方法</font><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在相关字段加上IdType.AUTO,自动递增</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br></pre></td></tr></table></figure><h2 id="2、在前后端交互中，MybatisPlus根据Id批量删除问题"><a href="#2、在前后端交互中，MybatisPlus根据Id批量删除问题" class="headerlink" title="2、在前后端交互中，MybatisPlus根据Id批量删除问题"></a>2、在前后端交互中，MybatisPlus根据Id批量删除问题</h2><p>1、在MybatisPlus提供的批量删除方法中，需要提供List的数据类型，而在前后端交互（这里代指Post请求）中，后端通过加@RequestBody注解可以将前端传过来的集合数据转换为集合/数组数据。</p><ul><li>前端传过来的数据格式</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><ul><li>后端可写的数据类型 （变量名统一为ids）</li></ul><blockquote><p>List<Integer>、List<Long>、Integer[]、Long[]</p></blockquote><p>然后通过业务层提供的removeBatchByIds(ids)或者数据层提供的deleteBatchIds(ids)即可完成删除。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mybatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb</title>
      <link href="/2024/05/12/backend/db/mongodb-1/"/>
      <url>/2024/05/12/backend/db/mongodb-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇mongodb的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis基础问题</title>
      <link href="/2024/05/12/backend/db/redis-1/"/>
      <url>/2024/05/12/backend/db/redis-1/</url>
      
        <content type="html"><![CDATA[<h2 id="一、为什么要使用Redis"><a href="#一、为什么要使用Redis" class="headerlink" title="一、为什么要使用Redis"></a>一、为什么要使用Redis</h2><p>1、数据存储在缓存中，访问速度快</p><p>2、将一些访问热度高的数据写在缓存中而不是每次都去访问数据库，从而减轻数据库压力</p><p>3、支持主从复制功能，保证了数据的高可用性和灾难恢复能力。</p><h3 id="二、Redis的常见命令"><a href="#二、Redis的常见命令" class="headerlink" title="二、Redis的常见命令"></a>二、Redis的常见命令</h3><h3 id="1、keys"><a href="#1、keys" class="headerlink" title="1、keys"></a>1、keys</h3><h2 id="三、Redis的基本类型"><a href="#三、Redis的基本类型" class="headerlink" title="三、Redis的基本类型"></a>三、Redis的基本类型</h2>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Redis </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java开发遇到的错误</title>
      <link href="/2024/05/12/backend/java/java-1/"/>
      <url>/2024/05/12/backend/java/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="if判断报空值异常"><a href="#if判断报空值异常" class="headerlink" title="if判断报空值异常"></a>if判断报空值异常</h2><p>例如： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//读取name报空值异常</span></span><br><span class="line"><span class="keyword">if</span> (name.equal(<span class="literal">null</span>)) &#123;</span><br><span class="line">    name = <span class="string">&quot;dd&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将明确的值放在最前面</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">null</span>.equal(name)) &#123;</span><br><span class="line">    name = <span class="string">&quot;dd&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用lambda表达式问题"><a href="#使用lambda表达式问题" class="headerlink" title="使用lambda表达式问题"></a>使用lambda表达式问题</h2><h3 id="不能直接修改方法体外基本数据类型的值"><a href="#不能直接修改方法体外基本数据类型的值" class="headerlink" title="不能直接修改方法体外基本数据类型的值"></a>不能直接修改方法体外基本数据类型的值</h3><p>解决方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//定义引用数据类型，封装基本数据类型，再修改</span><br><span class="line">//假设有map</span><br><span class="line">String[] name1 = &#123;&quot;1&quot;&#125;;</span><br><span class="line">String name2 =&quot;1&quot;;</span><br><span class="line">map.foreach((k,v) -&gt; &#123;</span><br><span class="line">name[0] = v; //不报错</span><br><span class="line">name2 = v; //报错</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring</title>
      <link href="/2024/05/12/backend/spring/spring-1/"/>
      <url>/2024/05/12/backend/spring/spring-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇spring的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springcloud</title>
      <link href="/2024/05/12/backend/springcloud/springclound-1/"/>
      <url>/2024/05/12/backend/springcloud/springclound-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇springcloud的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ant-design常用组件</title>
      <link href="/2024/05/12/frontend/ant-design/ant-design-1%20(copy)/"/>
      <url>/2024/05/12/frontend/ant-design/ant-design-1%20(copy)/</url>
      
        <content type="html"><![CDATA[<p>这是一篇ant-design的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ant-design常用组件</title>
      <link href="/2024/05/12/frontend/ant-design/ant-design-1/"/>
      <url>/2024/05/12/frontend/ant-design/ant-design-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇ant-design的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProForm - 高级表单</title>
      <link href="/2024/05/12/frontend/ant-design/ant-design-pro-1/"/>
      <url>/2024/05/12/frontend/ant-design/ant-design-pro-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​        Ant Design Pro作为蚂蚁金服官方维护的高级UI组件，深受广大开发者的好评，但由于官方文档过程，有些组件使用需要自己去摸索，很费时间。本文通过将列举Ant Design Pro 高级表单的常见使用方法，力求即粘即用，减少开发时间，提高开发效率。</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design Pro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProTable - 高级表格</title>
      <link href="/2024/05/12/frontend/ant-design/ant-design-pro-2/"/>
      <url>/2024/05/12/frontend/ant-design/ant-design-pro-2/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​        Ant Design Pro作为蚂蚁金服官方维护的高级UI组件，深受广大开发者的好评，但由于官方文档过程，有些组件使用需要自己去摸索，很费时间。本文通过将列举Ant Design Pro 高级表格的常见使用方法，力求即粘即用，减少开发时间，提高开发效率。</p><h2 id="基本使用——表格的使用"><a href="#基本使用——表格的使用" class="headerlink" title="基本使用——表格的使用"></a>基本使用——表格的使用</h2><h3 id="1、定义列信息"><a href="#1、定义列信息" class="headerlink" title="1、定义列信息"></a>1、定义列信息</h3><h4 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h4><blockquote><p>API.InterfaceInfoVO：数据的类型，可自定义</p><p>title：列名</p><p>dataIndex：数据中各个变量的名字，一一映射，需保持一致。</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">ProColumns</span>&lt;<span class="variable constant_">API</span>.<span class="property">InterfaceInfoVO</span>&gt;[] = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">        <span class="attr">dataIndex</span>: <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h4><p>数据格式主要是通过valueType来指定，</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">text</td><td style="text-align:center">普通文本，可以生成一个输入框</td></tr><tr><td style="text-align:center">textarea</td><td style="text-align:center">长文本，可以生成一个可边长输入框</td></tr><tr><td style="text-align:center">jsonCode</td><td style="text-align:center">json格式，显示时以JSON格式展示，可以生成一个可边长输入框</td></tr><tr><td style="text-align:center">dateTime</td><td style="text-align:center">时间，可以提供一个时间选择器选择时间</td></tr><tr><td style="text-align:center">dateRange</td><td style="text-align:center">时间范围，可以提供两个时间选择器来选择时间范围</td></tr><tr><td style="text-align:center">option</td><td style="text-align:center">选项，一般用于操作列</td></tr></tbody></table></div><h4 id="隐藏字段显示"><a href="#隐藏字段显示" class="headerlink" title="隐藏字段显示"></a>隐藏字段显示</h4><blockquote><p>hideInForm：布尔值，为ture表示在ProTable类型为form是不显示</p><p>hideInSearch：布尔值，为true表示不显示在搜索字段</p><p>hideInTable：布尔值，为true表示不显示在表格里</p></blockquote><p><strong><font color='each'>例子：</font></strong>创建时间的显示和选择查询</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">ProColumns</span>&lt;<span class="variable constant_">API</span>.<span class="property">InterfaceInfoVO</span>&gt;[] = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">        <span class="attr">sorter</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">dataIndex</span>: <span class="string">&#x27;createTime&#x27;</span>,</span><br><span class="line">        <span class="attr">valueType</span>: <span class="string">&#x27;dateTime&#x27;</span>,</span><br><span class="line">        <span class="attr">hideInSearch</span>: <span class="literal">true</span></span><br><span class="line">        <span class="attr">hideInForm</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">        <span class="attr">dataIndex</span>: <span class="string">&#x27;createTime&#x27;</span>,</span><br><span class="line">        <span class="attr">valueType</span>: <span class="string">&#x27;dateRange&#x27;</span>,</span><br><span class="line">        <span class="attr">hideInTable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hideInForm</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">search</span>: &#123;</span><br><span class="line">            <span class="attr">transform</span>: <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">startTime</span>: value[<span class="number">0</span>],</span><br><span class="line">                    <span class="attr">endTime</span>: value[<span class="number">1</span>],</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong><font color='Peach '>解释</font></strong></p><blockquote><p>都为createTime字段，第一个，只显示在表格里，不显示在搜索框和表单中，只展示创建时间；</p><p>而第二个显示在搜索框，但会显示两个时间，便于根据时间段搜索某一时间创建的数据。</p></blockquote><h2 id="进阶使用——快速生成表单"><a href="#进阶使用——快速生成表单" class="headerlink" title="进阶使用——快速生成表单"></a>进阶使用——快速生成表单</h2>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design Pro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react</title>
      <link href="/2024/05/12/frontend/react/react-1/"/>
      <url>/2024/05/12/frontend/react/react-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇react的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app</title>
      <link href="/2024/05/12/frontend/uni-app/uni-app-1/"/>
      <url>/2024/05/12/frontend/uni-app/uni-app-1/</url>
      
        <content type="html"><![CDATA[<p>这是一篇uni-app的使用文章</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Ant Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lemo-imui</title>
      <link href="/2024/05/12/frontend/vue/vue-1/"/>
      <url>/2024/05/12/frontend/vue/vue-1/</url>
      
        <content type="html"><![CDATA[<h2 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h2><p>用户连接  -》返回联系人数据</p><p>初次点击联系人头像 -》</p><p>后端：根据联系人id查询联系人，如果有的话，修改联系人的unread为0，查询接收人为联系人，发送人为用户或者接收人为用户，发送人为联系人的数据返回，前端：获取与联系人的信息数据，修改联系人的未读数为0，存入信息数据</p><p>用户发送消息 -》</p><p>1、后端，校验字段是否全，将dto转换为entity对象存入数据库，</p><p>2、用户修改联系人最后的消息为当前消息，时间为当前时间，更新数据库数据，返回成功给用户。</p><p>4、联系人修改用户最后的信息为当前信息，时间为当前时间，</p><p>5、查询联系人是否在线，不在线的话，未读数加一，更新数据库数据；否则设置信息接受人为用户，发送人为接收者，根据联系人id返回数据给联系人</p><p>用户接受信息 -》</p><p>直接添加信息即可。</p><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p>_handleSend(text)<br>1、获取@用户的id并转化成数组<br>2、设置消息体和at数据，创建message对象生成id：UUId,状态为going<br>3、添加信息appendMessage（message,true)<br>4、更新信息状态为succeed，更新联系人数据（最近的信息，最近消息的时间戳</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">handleSend</span>(<span class="params">message, next, file</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webSocket</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message))</span><br><span class="line">    <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">message</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;返回数据&#x27;</span>, <span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">message</span>.<span class="property">status</span> = <span class="string">&#x27;succeed&#x27;</span></span><br><span class="line">            <span class="title function_">next</span>(<span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">message</span> = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="消息右键操作"><a href="#消息右键操作" class="headerlink" title="消息右键操作"></a>消息右键操作</h2><h3 id="建立数据-contextmenu"><a href="#建立数据-contextmenu" class="headerlink" title="建立数据 contextmenu"></a>建立数据 contextmenu</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> contextmenu =  [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">click</span>: <span class="function">(<span class="params">e, instance, hide</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; <span class="variable constant_">IMUI</span>, message &#125; = instance;</span><br><span class="line">            <span class="keyword">const</span> data = &#123;</span><br><span class="line">              <span class="attr">id</span>: <span class="title function_">generateRandId</span>(),</span><br><span class="line">              <span class="attr">type</span>: <span class="string">&quot;event&quot;</span>,</span><br><span class="line">              <span class="comment">//使用 jsx 时 click必须使用箭头函数（使上下文停留在vue内）</span></span><br><span class="line">              <span class="attr">content</span>: (</span><br><span class="line">                <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    你撤回了一条消息&#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">span</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                      <span class="attr">v-show</span>=<span class="string">&#123;message.type</span> == <span class="string">&quot;text&quot;</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                      <span class="attr">style</span>=<span class="string">&quot;color:#333;cursor:pointer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                      <span class="attr">content</span>=<span class="string">&#123;message.content&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                      <span class="attr">on-click</span>=<span class="string">&#123;e</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                        IMUI.setEditorValue(e.target.getAttribute(&quot;content&quot;));</span></span><br><span class="line"><span class="language-xml">                      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                    &gt;</span></span><br><span class="line"><span class="language-xml">                      重新编辑</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">              ),</span><br><span class="line"></span><br><span class="line">              <span class="attr">toContactId</span>: message.<span class="property">toContactId</span>,</span><br><span class="line">              <span class="attr">sendTime</span>: <span class="title function_">getTime</span>(),</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="variable constant_">IMUI</span>.<span class="title function_">removeMessage</span>(message.<span class="property">id</span>);</span><br><span class="line">            <span class="variable constant_">IMUI</span>.<span class="title function_">appendMessage</span>(data, <span class="literal">true</span>);</span><br><span class="line">            <span class="title function_">hide</span>();</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">visible</span>: <span class="function"><span class="params">instance</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> instance.<span class="property">message</span>.<span class="property">fromUser</span>.<span class="property">id</span> == <span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">id</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;撤回消息&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">visible</span>: <span class="function"><span class="params">instance</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> instance.<span class="property">message</span>.<span class="property">fromUser</span>.<span class="property">id</span> != <span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">id</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;举报&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;转发&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">visible</span>: <span class="function"><span class="params">instance</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> instance.<span class="property">message</span>.<span class="property">type</span> == <span class="string">&quot;text&quot;</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;复制文字&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">visible</span>: <span class="function"><span class="params">instance</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> instance.<span class="property">message</span>.<span class="property">type</span> == <span class="string">&quot;image&quot;</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;下载图片&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">visible</span>: <span class="function"><span class="params">instance</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> instance.<span class="property">message</span>.<span class="property">type</span> == <span class="string">&quot;file&quot;</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;下载文件&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">click</span>: <span class="function">(<span class="params">e, instance, hide</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; <span class="variable constant_">IMUI</span>, message &#125; = instance;</span><br><span class="line">            <span class="variable constant_">IMUI</span>.<span class="title function_">setUserTag</span>(message.<span class="property">fromUser</span>);</span><br><span class="line">            <span class="title function_">hide</span>();</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;@TA&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">click</span>: <span class="function">(<span class="params">e, instance, hide</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; <span class="variable constant_">IMUI</span>, message &#125; = instance;</span><br><span class="line">            <span class="variable constant_">IMUI</span>.<span class="title function_">removeMessage</span>(message.<span class="property">id</span>);</span><br><span class="line">            <span class="title function_">hide</span>();</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&quot;lemon-icon-folder&quot;</span>,</span><br><span class="line">          <span class="attr">color</span>: <span class="string">&quot;red&quot;</span>,</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&quot;删除&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br></pre></td></tr></table></figure><h3 id="引入数据并赋值"><a href="#引入数据并赋值" class="headerlink" title="引入数据并赋值"></a>引入数据并赋值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">const add = [</span><br><span class="line">       &#123;</span><br><span class="line">         click: (e, instance, hide) =&gt; &#123;</span><br><span class="line">           const &#123; IMUI, message &#125; = instance;</span><br><span class="line">           const data = &#123;</span><br><span class="line">             id: generateRandId(),</span><br><span class="line">             type: &quot;event&quot;,</span><br><span class="line">             //使用 jsx 时 click必须使用箭头函数（使上下文停留在vue内）</span><br><span class="line">             content: (</span><br><span class="line">               &lt;div&gt;</span><br><span class="line">                 &lt;span&gt;</span><br><span class="line">                   你撤回了一条消息&#123;&quot; &quot;&#125;</span><br><span class="line">                   &lt;span</span><br><span class="line">                     v-show=&#123;message.type == &quot;text&quot;&#125;</span><br><span class="line">                     style=&quot;color:#333;cursor:pointer&quot;</span><br><span class="line">                     content=&#123;message.content&#125;</span><br><span class="line">                     on-click=&#123;e =&gt; &#123;</span><br><span class="line">                       IMUI.setEditorValue(e.target.getAttribute(&quot;content&quot;));</span><br><span class="line">                     &#125;&#125;</span><br><span class="line">                   &gt;</span><br><span class="line">                     重新编辑</span><br><span class="line">                   &lt;/span&gt;</span><br><span class="line">                 &lt;/span&gt;</span><br><span class="line">               &lt;/div&gt;</span><br><span class="line">             ),</span><br><span class="line"></span><br><span class="line">             toContactId: message.toContactId,</span><br><span class="line">             sendTime: getTime(),</span><br><span class="line">           &#125;;</span><br><span class="line">           IMUI.removeMessage(message.id);</span><br><span class="line">           IMUI.appendMessage(data, true);</span><br><span class="line">           hide();</span><br><span class="line">         &#125;,</span><br><span class="line">         visible: instance =&gt; &#123;</span><br><span class="line">           return instance.message.fromUser.id == this.user.id;</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;撤回消息&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         visible: instance =&gt; &#123;</span><br><span class="line">           return instance.message.fromUser.id != this.user.id;</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;举报&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         text: &quot;转发&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         visible: instance =&gt; &#123;</span><br><span class="line">           return instance.message.type == &quot;text&quot;;</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;复制文字&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         visible: instance =&gt; &#123;</span><br><span class="line">           return instance.message.type == &quot;image&quot;;</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;下载图片&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         visible: instance =&gt; &#123;</span><br><span class="line">           return instance.message.type == &quot;file&quot;;</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;下载文件&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         click: (e, instance, hide) =&gt; &#123;</span><br><span class="line">           const &#123; IMUI, message &#125; = instance;</span><br><span class="line">           IMUI.setUserTag(message.fromUser);</span><br><span class="line">           hide();</span><br><span class="line">         &#125;,</span><br><span class="line">         text: &quot;@TA&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         click: (e, instance, hide) =&gt; &#123;</span><br><span class="line">           const &#123; IMUI, message &#125; = instance;</span><br><span class="line">           IMUI.removeMessage(message.id);</span><br><span class="line">           hide();</span><br><span class="line">         &#125;,</span><br><span class="line">         icon: &quot;lemon-icon-folder&quot;,</span><br><span class="line">         color: &quot;red&quot;,</span><br><span class="line">         text: &quot;删除&quot;,</span><br><span class="line">       &#125;,</span><br><span class="line">     ],</span><br><span class="line">     return &#123;</span><br><span class="line">     </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="左侧联系人时间显示"><a href="#左侧联系人时间显示" class="headerlink" title="左侧联系人时间显示"></a>左侧联系人时间显示</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;lemon-imui ref=&quot;IMUI&quot;:contactTimeFormat=&quot;format&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">format</span> = <span class="function">(<span class="params">time</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> toData = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleDateString</span>()).<span class="title function_">getTime</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//今天</span></span><br><span class="line">    <span class="keyword">let</span> todayStart = toData <span class="comment">//开始时间</span></span><br><span class="line">    <span class="keyword">let</span> todayEnd = todayStart + <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> - <span class="number">1</span> <span class="comment">//结束时间</span></span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(time)</span><br><span class="line">    <span class="keyword">if</span> (time &gt;= todayStart &amp;&amp; time &lt;= todayEnd) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;date.getHours()&#125;</span>:<span class="subst">$&#123;date.getMinutes()&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//昨天</span></span><br><span class="line">    <span class="keyword">let</span> yesterdayStart = toData - <span class="number">3600</span> * <span class="number">24</span> * <span class="number">1000</span></span><br><span class="line">    <span class="keyword">let</span> yesterdayEnd = (yesterdayStart) + <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> - <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (time &gt;= yesterdayStart &amp;&amp; time &lt;= yesterdayEnd) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`昨天 <span class="subst">$&#123;date.getHours()&#125;</span>:<span class="subst">$&#123;date.getMinutes()&#125;</span>`</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;date.getFullYear() - <span class="number">2000</span>&#125;</span>/<span class="subst">$&#123;date.getMonth() + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;date.getDate()&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="切换联系人窗口"><a href="#切换联系人窗口" class="headerlink" title="切换联系人窗口"></a>切换联系人窗口</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入值为联系人ID</span></span><br><span class="line"><span class="title function_">changContact</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">IMUI</span>.<span class="title function_">changeContact</span>(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加联系人"><a href="#添加联系人" class="headerlink" title="添加联系人"></a>添加联系人</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addContact</span>(<span class="params">contact</span>) &#123;</span><br><span class="line">    <span class="comment">// // Todo 向后端请求判断是否存在再添加</span></span><br><span class="line">    <span class="comment">// this.$refs.IMUI.addContact(contact)</span></span><br><span class="line">    <span class="comment">// //已存在，切换到聊天框</span></span><br><span class="line">    <span class="comment">// this.$refs.IMUI.changeContact(contact.id)</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">IMUI</span>.<span class="title function_">appendContact</span>(contacts[<span class="number">0</span>])</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将jar包发布到maven中央仓库</title>
      <link href="/2024/05/10/backend/maven/maven-1/"/>
      <url>/2024/05/10/backend/maven/maven-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><pre><code>今天完成了Springboot Start的SDK开发，想着自己用过那么多的maven依赖，自己是否也能发布一个SDK供大家使用，查询众多网上数据，最终写了此文。</code></pre><h2 id="1、注册账号"><a href="#1、注册账号" class="headerlink" title="1、注册账号"></a>1、注册账号</h2><blockquote><p>可以使用GitHub账号注册，同步创建命名空间</p></blockquote><p><a href="https://central.sonatype.com/">中央仓库地址：https://central.sonatype.com/</a></p><h2 id="2、创建命名空间"><a href="#2、创建命名空间" class="headerlink" title="2、创建命名空间"></a>2、创建命名空间</h2><ul><li>1、点击 头像-》View Namespaces，进入命名空间设置</li><li>2、点击Add Nanespaces,创建命名空间。命名空间格式：io.github.<username>,<br> 比如我的github地址是github.com/shiba-lover,则命名空间为io.github.shiba-lover，<br>gitee、gitlab一样的设置。</li><li>3、根据下一步提示，前往github创建指定名仓库（验证用，用完即可删）</li></ul><h2 id="3、创建上传的账户密码"><a href="#3、创建上传的账户密码" class="headerlink" title="3、创建上传的账户密码"></a>3、创建上传的账户密码</h2><ul><li>1、点击头像-》 View Account，进入访问账号密码设置</li><li>2、点击Generate User Token,生成账号和密码，记得保存，后续都会用到，重新生成这个会失效。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>$&#123;server&#125;<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">username</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4、设置OpenPgb证书"><a href="#4、设置OpenPgb证书" class="headerlink" title="4、设置OpenPgb证书"></a>4、设置OpenPgb证书</h2><p>工具下载地址：<a href="https://gnupg.org/download/index.html">https://gnupg.org/download/index.html</a></p><h3 id="1、正常设置"><a href="#1、正常设置" class="headerlink" title="1、正常设置"></a>1、正常设置</h3><ul><li>1、进入下载地址，往下滑，找到Gpg4min，点击下载，选择简体中文安装。</li><li>2、安装完成后直接运行，或者到安装目录下的bin目录找到kleopatra.exe运行。</li><li>3、新建OpenPgb密钥对，名字为你的命名空间的username，比如我的是shiba-lover，邮箱是你命名空间绑定的邮箱。</li><li>4、点击使用密码句保护钥匙对，点击下一步，输入密码，这个密码是创建命名空间生成的密码，输入两次。</li><li>5、选中证书，右键，选择发布到服务器。</li><li>6、找到上面的从服务器中搜索，输入你的username，如果有你的信息，说明发布成功</li></ul><h3 id="2、其他保险设置"><a href="#2、其他保险设置" class="headerlink" title="2、其他保险设置"></a>2、其他保险设置</h3><p><strong>通过命令行验证是否已经把公钥发送到服务器</strong></p><blockquote><p>ps:工具下载会下载两个软件，一个是界面化软件kleopatra，一个是工具行软件</p></blockquote><ol><li>通过cmd进入命令行界面，输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --list-key</span><br></pre></td></tr></table></figure><ol><li>复制pub下的长代码，比如：DE973A4E38EC40B69390689D1CF0797BD9A36F44，并输入以下代码：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --keyserver keyserver.ubuntu.com --recv-keys pub长代码</span><br></pre></td></tr></table></figure><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/05/12/20240512-003435.png" alt="image-20240512003434696"></p><ol><li>如果没上传成功，输入以下命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --keyserver keyserver.ubuntu.com --send-keys pub长代码</span><br></pre></td></tr></table></figure><h2 id="5、修改maven的setting-xml文件"><a href="#5、修改maven的setting-xml文件" class="headerlink" title="5、修改maven的setting.xml文件"></a>5、修改maven的setting.xml文件</h2><p>找到servers,添加以下内容改为你自己的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>shibalover<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">username</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6、修改pom配置文件"><a href="#6、修改pom配置文件" class="headerlink" title="6、修改pom配置文件"></a>6、修改pom配置文件</h2><p><strong><font color='red'>以下内容缺一不可，只能修改值</font></strong></p><ul><li>项目配置和许可证配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 你自己的命名空间名字，需保持一致   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.gitee.shibalover<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义组件名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alapi-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  版本号  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>alapi-spring-boot-starter<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  项目描述  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>alapi-spring-boot-starter<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 项目地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://gitee.com/shibalover/alapi-spring-boot-starter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 许可证信息，使用的是Apache2的，必需配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>开发者和仓库信息配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发者信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿良<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>shibalover@qq.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">roles</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">role</span>&gt;</span>Project Manager<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">role</span>&gt;</span>Architect<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">roles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 项目仓库信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">connection</span>&gt;</span>https://gitee.com/shibalover/alapi-spring-boot-start<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:git:ssh://git@gitee.com:shibalover/alapi-spring-boot-start.git</span><br><span class="line">    <span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://gitee.com/shibalover/alapi-spring-boot-start<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>build配置</li></ul><blockquote><p><goal>jar</goal> 可能会爆红，不用理会，不影响运行</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   central发布插件    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.central<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>central-publishing-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 与setting中的server保持一致--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">publishingServerId</span>&gt;</span>shibalover<span class="tag">&lt;/<span class="name">publishingServerId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tokenAuth</span>&gt;</span>true<span class="tag">&lt;/<span class="name">tokenAuth</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   source源码插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   javadoc插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadocs<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- pgp路径 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executable</span>&gt;</span>D:\codeUtil\GnuPG\bin\gpg.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 密钥的名字--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">keyname</span>&gt;</span>shibalover<span class="tag">&lt;/<span class="name">keyname</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>sign-artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7、发布"><a href="#7、发布" class="headerlink" title="7、发布"></a>7、发布</h2><p>1、点击idea右边的maven，依次点击clean、deploy，出现success代表上传成功。</p><p>2、回到maven中央仓库发布页面<a href="https://central.sonatype.com/publishing">Maven Central: Publishing (sonatype.com)</a></p><p>3、点击发布Publishing</p><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/05/12/20240512-005534.png" alt="image-20240512005532734"></p><p>PS：发布后需要差不多等30分钟，可在<a href="https://central.sonatype.com/">Maven中央仓库 Maven Central</a>查询到</p><p>12小时至24小时，可在<a href="https://mvnrepository.com/">Maven远程仓库 Maven Repository</a>查询到。</p>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职场面试-1</title>
      <link href="/2024/05/08/order/work-1/"/>
      <url>/2024/05/08/order/work-1/</url>
      
        <content type="html"><![CDATA[<h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><pre><code>我叫什么，我拍的工作经历主要是分为3个阶段1.xxxx2.xxxx3.xxx</code></pre><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><h2 id="负责的模块"><a href="#负责的模块" class="headerlink" title="负责的模块"></a>负责的模块</h2><pre><code>所有的都要提前准备，准备+复盘</code></pre>]]></content>
      
      
      <categories>
          
          <category> 职场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> 职场 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora插入图片时自动上传图片到云服务器并回显</title>
      <link href="/2024/03/16/order/devUtil-1/"/>
      <url>/2024/03/16/order/devUtil-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​    作为一位程序员，拥有自己的博客是司空见惯的事情。而写博客时图片的保存和展示是一件很困扰的事情，一般放在项目的目录，或者是额外花时间去上传到自己的图床。有没有一种方式，能让我们在插入图片的同时就能把图片上传到我们的图床或者云存储服务呢？答案是有的。Typora在0.9.84 版本后更新图片上传功能，允许我们在插入照片的同时把图片上传到图床。</p><h2 id="下载Typora"><a href="#下载Typora" class="headerlink" title="下载Typora"></a>下载Typora</h2><p>​    Typora是一款非常强大的Markdown语法编辑器，但很遗憾，他是收费的。阿良通过收集网上材料，获取到了Typora破解版的下载方式，仅供大家学习。</p><blockquote><p> 原文链接：<a href="https://zhuanlan.zhihu.com/p/648915268">Typora破解版安装教程</a>  </p></blockquote><h3 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h3><blockquote><p> 百度下载链接：</p><p> 链接：<a href="https://pan.baidu.com/s/1hSr-x6NvfyzzFRWibvkr3g?pwd=0328">https://pan.baidu.com/s/1hSr-x6NvfyzzFRWibvkr3g?pwd=0328</a><br> 提取码：0328 </p></blockquote><h3 id="2、破解"><a href="#2、破解" class="headerlink" title="2、破解"></a>2、破解</h3><p>​    typora下载后，将百度网盘下载的app.asar.txt文件的后缀.txt去掉，改为app.asar。然后将app.asar拷贝到typora安装目录下的resource目录。可以先进入到resource目录查看是否有app.asar目录再选择粘贴替换。</p><h3 id="3、输入序列号激活"><a href="#3、输入序列号激活" class="headerlink" title="3、输入序列号激活"></a>3、输入序列号激活</h3><p>​    1、打开typora，点击输入”输入序列号”，邮箱一栏任意填写，保证邮箱地址格式正确就行。</p><p>​    2、选择百度网盘下载的key.txt文件中任意一条序列号，复制到输入序列号位置，点击激活即可。</p><h2 id="设置自动上传（需要node环境）"><a href="#设置自动上传（需要node环境）" class="headerlink" title="设置自动上传（需要node环境）"></a>设置自动上传（需要node环境）</h2><h3 id="1、下载插件"><a href="#1、下载插件" class="headerlink" title="1、下载插件"></a>1、下载插件</h3><p>​    1、下载PicGo-Core(command line)。点击文件 -&gt; 偏好设置 -&gt; 图像 -&gt;选择PicGo-Core(command line) -&gt;点击更新或者下载。</p><p>​    2、下载super-prefix（用于上传图片时能自动使用<a href="https://so.csdn.net/so/search?q=时间戳&amp;spm=1001.2101.3001.7020">时间戳</a>重命名）。 <strong>（可选）</strong></p><blockquote><p>进入C:\Users\用户名\AppData\Roaming\Typora\picgo\win64目录，目录下有picgo.exe文件</p><p>输入cmd进入控制台，输入以下命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\你的用户名\AppData\Roaming\Typora\picgo\win64</span><br><span class="line">.\picgo.exe install super-prefix</span><br></pre></td></tr></table></figure><p> 3、下载gitee-uploader（用于使用gitee作为图床）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\picgo.exe install gitee-uploader</span><br></pre></td></tr></table></figure><p>​    </p><h3 id="2、配置阿里云自动上传"><a href="#2、配置阿里云自动上传" class="headerlink" title="2、配置阿里云自动上传"></a>2、配置阿里云自动上传</h3><p>​    1、回到Typora图像设置，打开配置文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;doc/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgo-plugin-super-prefix&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prefixFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YYYY/MM/DD/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fileFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YYYYMMDD-HHmmss&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;picgo-plugin-super-prefix&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><font color='Peach '>参数解释：</font><ul><li><p>picBed: 设置图床参数。  </p><blockquote><p>accessKeyId：阿里云设置，可通过Accesskey 管理获取。</p><p>accessKeySecret： 同上，与accessKeyId同时设置。</p><p>bucket：阿里云oss中bucket的名称</p><p>area：地域节点，可通过bucket的概览，最下面获取，比如广州的为oss-cn-guangzhou</p><p>path：存储路径</p><p>customUrl：公网可访问地址，用于回显地址。也可通过bucket概览，Bucket 域名获取</p><p>一般为<a href="https://bucket名.地域节点，比如https://pic.oss-cn-guangzhou.aliyuncs.com">https://bucket名.地域节点，比如https://pic.oss-cn-guangzhou.aliyuncs.com</a></p><p>也可设置为bucket绑定的域名。</p></blockquote></li><li><p>picgo-plugin-super-prefix：super-prefix插件设置  </p><blockquote><p>prefixFormat: 目录格式</p><p>fileFormat：文件格式</p></blockquote></li><li><p>picgoPlugins： 插件设置  </p><blockquote><p>“picgo-plugin-super-prefix”: true 开启super-prefix插件</p></blockquote></li></ul><p>2、回到图像配置，点击验证图片上传选型</p><p>3、勾选插入图片选项</p><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/05/11/20240511-200159.png" alt="image-20240511200158708"></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> 开发技巧 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试-Redis篇-1</title>
      <link href="/2024/03/16/order/work-2/"/>
      <url>/2024/03/16/order/work-2/</url>
      
        <content type="html"><![CDATA[<h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><blockquote><p>原因：一是验证项目场景的真实性，二是为了作为深入发问的切入点</p></blockquote><h2 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h2><h3 id="什么是缓存穿透"><a href="#什么是缓存穿透" class="headerlink" title="什么是缓存穿透"></a>什么是缓存穿透</h3><pre><code>查询一个不存在的数据，MySQL查询不到数据也不会直接写入缓存，就会导致每次请求都会查询MySQL数据库。</code></pre><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="1、缓存空数据"><a href="#1、缓存空数据" class="headerlink" title="1、缓存空数据"></a>1、缓存空数据</h4><pre><code>查询返回的数据为空。仍把这个空结果进行缓存。优点是简单，缺点：消耗内存，可能会发生数据不一致的问题。</code></pre><h4 id="2、使用布隆过滤器"><a href="#2、使用布隆过滤器" class="headerlink" title="2、使用布隆过滤器"></a>2、使用布隆过滤器</h4><blockquote><p>布隆过滤器的作用：检索一个元素是否在一个集合中。</p></blockquote><pre><code>在缓存预热的时，预热布隆过滤器。优点：内存占用较少，没有多余key。缺点：实现复杂，存在误判（这个误判率可以人为设置）</code></pre><h2 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h2><h3 id="什么是缓存击穿"><a href="#什么是缓存击穿" class="headerlink" title="什么是缓存击穿"></a>什么是缓存击穿</h3><pre><code>给某一个key设置了过期时间，当key过期的时候，恰好这时间点对这个key有大量的并发请求过来，这些请求可能会瞬间把DB压垮</code></pre><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="1、互斥锁"><a href="#1、互斥锁" class="headerlink" title="1、互斥锁"></a>1、互斥锁</h4><pre><code>例如：线程1查询缓存，未命中，就会获取互斥锁，如果获取锁成功，就会查询数据库数据并写入缓存，然后释放锁。而如果没有获取锁，就会进入休眠，过一会再次查询，直到缓存击中。优缺点：高一致，但性能差</code></pre><h4 id="2、逻辑过期"><a href="#2、逻辑过期" class="headerlink" title="2、逻辑过期"></a>2、逻辑过期</h4><pre><code>    不直接设置过期时间，而是通过添加逻辑时间字段，来判定是否过期。    例如：线程1查询缓存，发现逻辑时间已过期，则会获取互斥锁，然后返回过期数据，如果获取锁成功，则会查询数据库数据，重置缓存过期时间，然后释放锁。    优缺点：高可用、性能优、</code></pre>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot跨域问题解决</title>
      <link href="/2024/03/16/backend/springboot/kuayu/"/>
      <url>/2024/03/16/backend/springboot/kuayu/</url>
      
        <content type="html"><![CDATA[<h2 id="简单了解跨域"><a href="#简单了解跨域" class="headerlink" title="简单了解跨域"></a>简单了解跨域</h2><p>跨域，全称为“跨域资源共享”（Cross-origin resource sharing），是浏览器的一种安全机制。<strong>只会在浏览器中，使用 AJAX （fetch/XMLHttpRequest）时发生</strong>。当你在一个 web 页面中，使用 ajax 对目标 URL 发起了请求，只要目标 URL 的 <strong>协议</strong>，<strong>主机</strong>，<strong>端口</strong> 和当前 web 页面的 <strong>协议</strong>，<strong>主机</strong>，<strong>端口</strong> 任意不一致，就会产生跨域。</p><p>例如，我在页面 <code>http://localhost:1313</code> 中，对如下 URL 发起 AJAX 请求，都会导致跨域:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://localhost:1313 <span class="comment"># 协议不一致，跨域</span></span><br><span class="line">http://127.0.0.1:1313  <span class="comment"># 主机不一致，跨域</span></span><br><span class="line">http://localhost:8088  <span class="comment"># 端口不一致，跨域</span></span><br></pre></td></tr></table></figure><p>当浏览器发现当前请求存在跨域的时候，浏览器会先往目标 URL 发送一个预检请求（<code>OPTIONS</code>）进行预检。这个请求会提交一些 Header 信息，服务器会根据此做出响应，同样也会写入一些 Header。浏览器就可以根据响应的 Header 信息来确认是否要阻止当前的跨域请求，也就是跨域成功与否。</p><p><strong>理解跨域，本质上就是理解和跨域有关的请求 Header 和 响应 Header。</strong></p><h3 id="请求-Header"><a href="#请求-Header" class="headerlink" title="请求 Header"></a>请求 Header</h3><ul><li><p><code>Origin</code></p><p>跨域请求，是从哪里发出，也就是表示请求来自哪个源（协议 + 主机 + 端口）。</p></li><li><p><code>Access-Control-Request-Method</code></p><p>跨域请求将会使用什么请求方法发起请求。</p></li><li><p><code>Access-Control-Request-Headers</code></p><p>跨域请求将会提交哪些 Header 给服务器。</p></li></ul><h3 id="响应-Header"><a href="#响应-Header" class="headerlink" title="响应 Header"></a>响应 Header</h3><ul><li><p><code>Access-Control-Allow-Origin</code></p><p>允许发起跨域请求的源，例如：<code>https://foo.example</code>，可以使用通配符： <code>*</code> 表示允许所有。</p></li><li><p><code>Access-Control-Allow-Methods</code></p><p>允许跨域请求使用哪些请求方法，多个用逗号分割。</p></li><li><p><code>Access-Control-Allow-Headers</code></p><p>允许跨域请求提交哪些 Header，多个用逗号分割。</p></li><li><p><code>Access-Control-Expose-Headers</code></p><p>允许在跨域请求的响应中访问的额外的 Header 名称，多个的话，使用逗号分割。</p><blockquote><p>默认情况下，在跨域请求的响应中，Javascript 的的只能访问 <code>Cache-Control</code>、<code>Content-Language</code>、<code>Content-Type</code>、<code>Expires</code>、<code>Last-Modified</code>、<code>Pragma</code> 这个几个基本的响应头。如果你要访问其他的 Header，需要通过此设置。例如：<code>Access-Control-Expose-Headers: X-Ahth-Token</code>。</p></blockquote></li><li><p><code>Access-Control-Max-Age</code></p><p>缓存时间，可选，用来指定本次预检请求的有效期，单位为秒。在这个时间内，再次发起跨域请求不会再进行预检。</p></li><li><p><code>Access-Control-Allow-Credentials</code></p><p>是否允许客户端携带凭证，boolean 值。如果设置为 <code>true</code>，那么客户端在发起跨域请求的时候会在请求中携带 Cookie 等凭证信息。</p></li></ul><p>用通俗的语言来描述跨域预检的过程：浏览器发现 Javascript 正在发起一个跨域请求的时候，会先往这个URL发起一个预检（<code>OPTIONS</code>）请求，告诉服务器“我打算给你发起一个请求，我所在的地址是 XXX，我要使用 XXX 请求方法，我还要提交 XXX 等 Header”。服务器收到后请求后，响应服务器“我只接受来自于 XXX 的跨域请求，只能用 XXX 请求方法，请求只能携带 XXX Header，请求可以携带凭证，还允许客户端读取响应的 XXX Header，并且30分钟内不必重复发起预检请求”</p><p>完成了这一轮协商后，浏览器就可以判断是否要继续发起真正的跨域请求。</p><p>一些要注意的点：</p><ol><li>如果服务器要求客户端可以携带凭证 <code>Access-Control-Allow-Credentials: true</code>，那么 <code>Access-Control-Allow-Origin</code> 不能设置为通配符 <code>*</code>，而是必须要设置完整的跨域请求源。</li><li><code>Access-Control-Allow-Methods</code>、<code>Access-Control-Allow-Headers</code>、<code>Access-Control-Expose-Headers</code> 都可以设置通配符 <code>*</code>，但是可能存在浏览器兼容问题，需要注意。</li></ol><h2 id="Spring-中对的-CORS-支持"><a href="#Spring-中对的-CORS-支持" class="headerlink" title="Spring 中对的 CORS 支持"></a>Spring 中对的 CORS 支持</h2><h3 id="WebMvcConfigurer"><a href="#WebMvcConfigurer" class="headerlink" title="WebMvcConfigurer"></a>WebMvcConfigurer</h3><p>简单一点，可以通过覆写 <code>WebMvcConfigurer</code> 中的 <code>addCorsMappings(CorsRegistry registry)</code> 方法来配置应用的全局的跨域设置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)                  <span class="comment">// 允许跨域请求的path，支持路径通配符，如：/api/**</span></span><br><span class="line">            .allowedOrigins(<span class="string">&quot;*&quot;</span>)                    <span class="comment">// 允许发起请求的源</span></span><br><span class="line">            .allowedHeaders(<span class="string">&quot;*&quot;</span>)                    <span class="comment">// 允许客户端的提交的 Header，通配符 * 可能有浏览器兼容问题</span></span><br><span class="line">            .allowedMethods(<span class="string">&quot;GET&quot;</span>)                  <span class="comment">// 允许客户端使用的请求方法</span></span><br><span class="line">            .allowCredentials(<span class="literal">false</span>)                <span class="comment">// 不允许携带凭证</span></span><br><span class="line">            .exposedHeaders(<span class="string">&quot;X-Auth-Token, X-Foo&quot;</span>)  <span class="comment">// 允许额外访问的 Response Header</span></span><br><span class="line">            .maxAge(<span class="number">3600</span>)                           <span class="comment">// 预检缓存一个小时</span></span><br><span class="line">            ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CrossOrigin"><a href="#CrossOrigin" class="headerlink" title="@CrossOrigin"></a>@CrossOrigin</h3><p><code>WebMvcConfigurer</code> 是全局配置，如果你需要更精准的控制 Api 的跨域策略，可以通过在 handler 方法或者是 controller 类上注解 <code>@CrossOrigin</code> 来设置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CrossOrigin &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AliasFor(&quot;origins&quot;)</span></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AliasFor(&quot;value&quot;)</span></span><br><span class="line">    String[] origins() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] originPatterns() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] allowedHeaders() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] exposedHeaders() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    RequestMethod[] methods() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">allowCredentials</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="title function_">maxAge</span><span class="params">()</span> <span class="keyword">default</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了前面的理论支撑，你也不难看出这些注解属性所代表的含义，它可以注解在 Controller 类上，对当前类中的所有 hanlder 方法都生效，也可以注解在 handler 方法上，仅对此方法生效。如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.CrossOrigin;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/foo&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin(origins = &quot;*&quot;,             // 允许的源，也就是 allowedOrigins</span></span><br><span class="line"><span class="meta">            allowCredentials = &quot;false&quot;,     // 不允许提交cookie</span></span><br><span class="line"><span class="meta">        allowedHeaders = &quot;*&quot;,           // 允许的请求头</span></span><br><span class="line"><span class="meta">        exposedHeaders = &quot;*&quot;,           // 允许客户端额外读取的响应头</span></span><br><span class="line"><span class="meta">        maxAge = 3600,                  // 缓存时间</span></span><br><span class="line"><span class="meta">        methods = &#123;RequestMethod.GET, RequestMethod.HEAD&#125; // 允许客户端的请求方法</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FooController</span> &#123;</span><br><span class="line">    <span class="comment">// 省略 hanlder 方法定义</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不管是 <code>WebMvcConfigurer</code> 配置还是 <code>@CrossOrigin</code> 注解，都是用硬编码方式配置跨域，这相当的不够灵活。</p><h3 id="CorsFilter"><a href="#CorsFilter" class="headerlink" title="CorsFilter"></a>CorsFilter</h3><p>Spring 提供了一个 <code>CorsFilter</code> 的 <code>Filter</code> 实现类，可以让我们更加灵活地，以编程式的方式来配置跨域。这也是我较为推荐的一种方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 FilterRegistrationBean 注册 CorsFilter</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FilterRegistrationBean&lt;CorsFilter&gt; <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 跨域 Filter</span></span><br><span class="line">        <span class="type">CorsFilter</span> <span class="variable">corsFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(request -&gt; &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 请求源</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">origin</span> <span class="operator">=</span> request.getHeader(HttpHeaders.ORIGIN);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.hasText(origin)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 非跨域请求</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 针对每个请求，编程式设置跨域</span></span><br><span class="line">            <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 允许发起跨域请求的源，直接取 Origin header 值，不论源是哪儿，服务器都接受</span></span><br><span class="line">            config.addAllowedOrigin(origin);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 允许客户端的请求的所有 Header</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">headers</span> <span class="operator">=</span> request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(headers)) &#123;</span><br><span class="line">                config.setAllowedHeaders(Stream.of(headers.split(<span class="string">&quot;,&quot;</span>)).map(String::trim).distinct().toList());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 允许客户端的所有请求方法</span></span><br><span class="line">            config.addAllowedMethod(request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD));</span><br><span class="line">            <span class="comment">// 允许读取所有 Header</span></span><br><span class="line">            <span class="comment">// 注意，&quot;*&quot; 通配符，可能在其他低版本浏览中不兼容。</span></span><br><span class="line">            config.addExposedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            <span class="comment">// 缓存30分钟</span></span><br><span class="line">            config.setMaxAge(Duration.ofMinutes(<span class="number">30</span>));</span><br><span class="line">            <span class="comment">// 允许携带凭证</span></span><br><span class="line">            config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> config;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        FilterRegistrationBean&lt;CorsFilter&gt; bean = <span class="keyword">new</span> <span class="title class_">FilterRegistrationBean</span>&lt;&gt;(corsFilter);</span><br><span class="line">        bean.addUrlPatterns(<span class="string">&quot;/*&quot;</span>);                  <span class="comment">// Filter 拦截路径</span></span><br><span class="line">        bean.setOrder(Ordered.LOWEST_PRECEDENCE);   <span class="comment">// 保证最先执行</span></span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的这个 <code>CorsFilter</code> 是一个万能 Filter，基本上可以解决 spring 应用中 999.999% 的跨域问题。</p><blockquote><p><strong>注意</strong>：不论任何方式，如果将 <code>allowCredentials</code> 设置为了 <code>true</code>，则 <code>allowedOrigins</code> 必须设置明确的源，不能使用通配符： <code>*</code>，否则运行时会抛出异常：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot; since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header. To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.</span><br></pre></td></tr></table></figure></blockquote><p>另外，上述三种方式，任选其一就行。不要重复定义！</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="创建演示端点"><a href="#创建演示端点" class="headerlink" title="创建演示端点"></a>创建演示端点</h3><p>创建一个简单的 spring boot（3.x）项目，在 <code>8080</code> 端口的 <code>/hello</code> 端点提供一个 HTTP 服务，固定响应字符串：<code>Hello World!</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(produces = MediaType.TEXT_PLAIN_VALUE)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span> <span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跨域请求"><a href="#跨域请求" class="headerlink" title="跨域请求"></a>跨域请求</h3><p>打开浏览器，访问 <code>http://localhost:8080/</code>，看到的是一个 404 错误页面，这是因为没有设置默认主页，这没关系。</p><p>我们可以在控制台用 Javascript 代码发起跨域请求，把服务器的响应输出到控制台。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://127.0.0.1:8080/hello&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">resp</span> =&gt;</span> resp.<span class="title function_">text</span>().<span class="title function_">then</span>(<span class="function"><span class="params">msg</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(msg))); <span class="comment">// 注意，访问的URL的主机名是 127.0.0.1 和当前页面URL的主机名 localhost 不同，所以这是一个跨域请求。</span></span><br></pre></td></tr></table></figure><p><img src="http://shiba-sky-take-out.oss-cn-guangzhou.aliyuncs.com/doc/2024/07/25/20240725-150147.webp" alt="Spring 应用中的 CORS 请求"></p><p>如你所见，成功读取到了服务器的响应，跨域配置生效。</p><h3 id="查看-OPTIONS-预检请求"><a href="#查看-OPTIONS-预检请求" class="headerlink" title="查看 OPTIONS 预检请求"></a>查看 <code>OPTIONS</code> 预检请求</h3><p>以前可以直接在浏览器控制台看到 <code>OPTIONS</code> 请求，不知道从什么时候起，<a href="https://www.chromium.org/Home/loading/oor-cors/">Chrome 不再在控制台展示 CORS 相关的 OPTIONS 预检请求</a>。</p><p>那就用 <code>Postman</code> 工具模拟一个 <code>OPTIONS</code> 请求吧，下面就是预检的请求/响应日志。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS /hello HTTP/1.1</span><br><span class="line">Origin: http://localhost:8080/</span><br><span class="line">Access-Control-Request-Headers: Foo</span><br><span class="line">Access-Control-Request-Method: GET</span><br><span class="line">User-Agent: PostmanRuntime/7.29.2</span><br><span class="line">Accept: */*</span><br><span class="line">Postman-Token: c5db1682-d313-4b78-9e36-a166cd9aea42</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Connection: keep-alive</span><br><span class="line"> </span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Access-Control-Allow-Headers: Foo</span><br><span class="line">Access-Control-Expose-Headers: *</span><br><span class="line">Date: Tue, 29 Aug 2023 06:31:49 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Access-Control-Allow-Origin: http://localhost:8080/</span><br><span class="line">Vary: Origin</span><br><span class="line">Vary: Access-Control-Request-Method</span><br><span class="line">Vary: Access-Control-Request-Headers</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Content-Length: 0</span><br><span class="line">Access-Control-Allow-Methods: GET</span><br><span class="line">Access-Control-Max-Age: 1800</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>订单页面完善以及支付的实现</title>
      <link href="/2024/03/16/backend/springboot/springboot-2/"/>
      <url>/2024/03/16/backend/springboot/springboot-2/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在完成仿天猫购物系统的时候，发现订单展示的时候，同一个订单，却展示多条数据，对用户来说非常不友好，并且没有支付功能，本文通过代码展示，来完善订单页面以及支付功能的实现</p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h3><h5 id="1、注册支付宝开放平台并获取到沙箱环境的以下数据"><a href="#1、注册支付宝开放平台并获取到沙箱环境的以下数据" class="headerlink" title="1、注册支付宝开放平台并获取到沙箱环境的以下数据"></a>1、注册支付宝开放平台并获取到沙箱环境的以下数据</h5><p><a href="https://blog.csdn.net/weixin_62484264/article/details/137370974">【2024】springboot支付宝沙箱支付详细步骤（一篇搞定）_2024支付宝沙箱在哪-CSDN博客</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">appId: </span><br><span class="line">appPrivateKey: </span><br><span class="line">alipayPublicKey: </span><br><span class="line">##公网回调地址</span><br><span class="line">notifyUrl: http://e459fcd.r5.cpolar.top + 后端回调通知地址（/alipay/notify）</span><br></pre></td></tr></table></figure><h5 id="2、配置内网穿透，穿透端口为后端端口，将穿透后的地址填到notifyUrl"><a href="#2、配置内网穿透，穿透端口为后端端口，将穿透后的地址填到notifyUrl" class="headerlink" title="2、配置内网穿透，穿透端口为后端端口，将穿透后的地址填到notifyUrl"></a>2、配置内网穿透，穿透端口为后端端口，将穿透后的地址填到notifyUrl</h5><p><a href="https://www.cpolar.com/download">download下载 - cpolar 极点云官网</a></p><h3 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h3><h4 id="1、修改Cart，添加price属性"><a href="#1、修改Cart，添加price属性" class="headerlink" title="1、修改Cart，添加price属性"></a>1、修改Cart，添加price属性</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cart</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品总价</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(Double price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、-修改OrdersMapper-xml"><a href="#2、-修改OrdersMapper-xml" class="headerlink" title="2、 修改OrdersMapper.xml"></a>2、 修改OrdersMapper.xml</h4><blockquote><p>在mapper标签内，添加以下内容</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.example.entity.Orders&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;orderId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;order_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;userId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;useraddress&quot;</span> <span class="attr">column</span>=<span class="string">&quot;useraddress&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">column</span>=<span class="string">&quot;phone&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;status&quot;</span> <span class="attr">column</span>=<span class="string">&quot;status&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;cartData&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.util.List&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.example.entity.Cart&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;goodsImg&quot;</span> <span class="attr">column</span>=<span class="string">&quot;goodsImg&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;goodsName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;goodsName&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;goodsPrice&quot;</span> <span class="attr">column</span>=<span class="string">&quot;goodsPrice&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;num&quot;</span> <span class="attr">column</span>=<span class="string">&quot;num&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;businessName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;businessName&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;businessId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;businessId&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>修改selectAll 以及selectByorderId的结果类型，其余不变</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;result&quot;</span>&gt;</span></span><br><span class="line">    select orders.*, business.name as businessName, goods.img as goodsImg, goods.name as goodsName, goods.price as goodsPrice,</span><br><span class="line">    address.username as username, address.useraddress as useraddress, address.phone as phone</span><br><span class="line">    from orders</span><br><span class="line">    left join business on orders.business_id = business.id</span><br><span class="line">    left join goods on orders.goods_id = goods.id</span><br><span class="line">    left join address on orders.address_id = address.id</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;id != null&quot;</span>&gt;</span> and id= #&#123;id&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userId != null&quot;</span>&gt;</span> and orders.user_id = #&#123;userId&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;businessId != null&quot;</span>&gt;</span> and orders.business_id = #&#123;businessId&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;goodsId != null&quot;</span>&gt;</span> and goods_id = #&#123;goodsId&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;num != null&quot;</span>&gt;</span> and num = #&#123;num&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;price != null&quot;</span>&gt;</span> and price = #&#123;price&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;addressId != null&quot;</span>&gt;</span> and address_id = #&#123;addressId&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span> and status = #&#123;status&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;orderId != null&quot;</span>&gt;</span> and order_id = #&#123;orderId&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByOrderId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;result&quot;</span>&gt;</span></span><br><span class="line">    select orders.*, business.name as businessName, goods.img as goodsImg, goods.name as goodsName, goods.price as goodsPrice, goods.unit as goodsUnit,</span><br><span class="line">    address.username as username, address.useraddress as useraddress, address.phone as phone</span><br><span class="line">    from orders</span><br><span class="line">    left join business on orders.business_id = business.id</span><br><span class="line">    left join goods on orders.goods_id = goods.id</span><br><span class="line">    left join address on orders.address_id = address.id</span><br><span class="line">    where order_id = #&#123;orderId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、修改OrdersService"><a href="#3、修改OrdersService" class="headerlink" title="3、修改OrdersService"></a>3、修改OrdersService</h4><blockquote><p>修改查询所以、分页查询、按订单编号查询的代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Orders&gt; <span class="title function_">selectAll</span><span class="params">(Orders orders)</span> &#123;</span><br><span class="line">    List&lt;Orders&gt; orders1 = ordersMapper.selectAll(orders);</span><br><span class="line">    orders1.forEach(OrdersService::toOrdersDTO);</span><br><span class="line">    <span class="keyword">return</span> orders1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> PageInfo&lt;Orders&gt; <span class="title function_">selectPage</span><span class="params">(Orders orders, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line">    <span class="type">Account</span> <span class="variable">currentUser</span> <span class="operator">=</span> TokenUtils.getCurrentUser();</span><br><span class="line">    <span class="keyword">if</span> (RoleEnum.USER.name().equals(currentUser.getRole())) &#123;</span><br><span class="line">        orders.setUserId(currentUser.getId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (RoleEnum.BUSINESS.name().equals(currentUser.getRole())) &#123;</span><br><span class="line">        orders.setBusinessId(currentUser.getId());</span><br><span class="line">    &#125;</span><br><span class="line">    PageHelper.startPage(pageNum, pageSize);</span><br><span class="line">    List&lt;Orders&gt; list = selectAll(orders);</span><br><span class="line">    <span class="keyword">return</span> PageInfo.of(list);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orderId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> Orders <span class="title function_">selectByOrderId</span><span class="params">(String orderId)</span> &#123;</span><br><span class="line">    <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> ordersMapper.selectByOrderId(orderId);</span><br><span class="line">    <span class="keyword">if</span> (orders != <span class="literal">null</span>) &#123;</span><br><span class="line">        toOrdersDTO(orders);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> orders;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">toOrdersDTO</span><span class="params">(Orders orders)</span> &#123;</span><br><span class="line">    List&lt;Cart&gt; cartData = orders.getCartData();</span><br><span class="line">    <span class="comment">//获取商品总数</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">Double</span> <span class="variable">price</span> <span class="operator">=</span> <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Cart cart : cartData) &#123;</span><br><span class="line">        num += cart.getNum();</span><br><span class="line">        price += cart.getPrice();</span><br><span class="line">    &#125;</span><br><span class="line">    orders.setNum(num);</span><br><span class="line">    orders.setPrice(price);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="支付配置"><a href="#支付配置" class="headerlink" title="支付配置"></a>支付配置</h3><h4 id="1、添加maven依赖"><a href="#1、添加maven依赖" class="headerlink" title="1、添加maven依赖"></a>1、添加maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alipay.sdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alipay-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.35.79.ALL<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、配置参数"><a href="#2、配置参数" class="headerlink" title="2、配置参数"></a>2、配置参数</h4><blockquote><p>在application.yml添加并配置以下参数</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alipay:</span></span><br><span class="line">  <span class="attr">appId:</span> </span><br><span class="line">  <span class="attr">appPrivateKey:</span> </span><br><span class="line">  <span class="attr">alipayPublicKey:</span> </span><br><span class="line">  <span class="attr">notifyUrl:</span>  <span class="string">http://e459fcd.r5.cpolar.top</span></span><br></pre></td></tr></table></figure><h4 id="3、添加配置类"><a href="#3、添加配置类" class="headerlink" title="3、添加配置类"></a>3、添加配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;alipay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliPayConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line">    <span class="keyword">private</span> String appPrivateKey;</span><br><span class="line">    <span class="keyword">private</span> String alipayPublicKey;</span><br><span class="line">    <span class="keyword">private</span> String notifyUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAppId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> appId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAppId</span><span class="params">(String appId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.appId = appId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAppPrivateKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> appPrivateKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAppPrivateKey</span><span class="params">(String appPrivateKey)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.appPrivateKey = appPrivateKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAlipayPublicKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> alipayPublicKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAlipayPublicKey</span><span class="params">(String alipayPublicKey)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.alipayPublicKey = alipayPublicKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getNotifyUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> notifyUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNotifyUrl</span><span class="params">(String notifyUrl)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.notifyUrl = notifyUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、添加支付控制器类"><a href="#4、添加支付控制器类" class="headerlink" title="4、添加支付控制器类"></a>4、添加支付控制器类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.aliang.shopping.common.Result;</span><br><span class="line"><span class="keyword">import</span> com.aliang.shopping.common.config.AliPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.aliang.shopping.entity.Orders;</span><br><span class="line"><span class="keyword">import</span> com.aliang.shopping.service.OrdersService;</span><br><span class="line"><span class="keyword">import</span> com.alipay.api.AlipayApiException;</span><br><span class="line"><span class="keyword">import</span> com.alipay.api.AlipayClient;</span><br><span class="line"><span class="keyword">import</span> com.alipay.api.DefaultAlipayClient;</span><br><span class="line"><span class="keyword">import</span> com.alipay.api.internal.util.AlipaySignature;</span><br><span class="line"><span class="keyword">import</span> com.alipay.api.request.AlipayTradePagePayRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/alipay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliPayController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付宝沙箱网关地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">GATEWAY_URL</span> <span class="operator">=</span> <span class="string">&quot;https://openapi-sandbox.dl.alipaydev.com/gateway.do&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FORMAT</span> <span class="operator">=</span> <span class="string">&quot;JSON&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line">    <span class="comment">//签名方式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SIGN_TYPE</span> <span class="operator">=</span> <span class="string">&quot;RSA2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> AliPayConfig aliPayConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> OrdersService ordersService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/pay&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">pay</span><span class="params">(String orderId)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(orderId)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 查询订单信息</span></span><br><span class="line">        <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> ordersService.selectByOrderId(orderId);</span><br><span class="line">        <span class="keyword">if</span> (orders == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1. 创建Client，通用SDK提供的Client，负责调用支付宝的API</span></span><br><span class="line">        <span class="type">AlipayClient</span> <span class="variable">alipayClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAlipayClient</span>(GATEWAY_URL, aliPayConfig.getAppId(),</span><br><span class="line">                                                            aliPayConfig.getAppPrivateKey(), FORMAT, CHARSET, aliPayConfig.getAlipayPublicKey(), SIGN_TYPE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 创建 Request并设置Request参数</span></span><br><span class="line">        <span class="type">AlipayTradePagePayRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePagePayRequest</span>();  <span class="comment">// 发送请求的 Request类</span></span><br><span class="line">        request.setNotifyUrl(aliPayConfig.getNotifyUrl());</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">bizContent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        bizContent.set(<span class="string">&quot;out_trade_no&quot;</span>, orders.getOrderId());  <span class="comment">// 我们自己生成的订单编号</span></span><br><span class="line">        bizContent.set(<span class="string">&quot;total_amount&quot;</span>, orders.getPrice()); <span class="comment">// 订单的总金额</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> orders.getGoodsName() + <span class="string">&quot;等&quot;</span> + orders.getNum() + <span class="string">&quot;件商品&quot;</span>;</span><br><span class="line">        bizContent.set(<span class="string">&quot;subject&quot;</span>, name);   <span class="comment">// 支付的名称</span></span><br><span class="line">        bizContent.set(<span class="string">&quot;product_code&quot;</span>, <span class="string">&quot;FAST_INSTANT_TRADE_PAY&quot;</span>);  <span class="comment">// 固定配置</span></span><br><span class="line">        bizContent.set(<span class="string">&quot;qr_pay_mode&quot;</span>, <span class="string">&quot;2&quot;</span>);  <span class="comment">// 表单格式</span></span><br><span class="line">        bizContent.set(<span class="string">&quot;qrcode_width&quot;</span>, <span class="string">&quot;200&quot;</span>);  <span class="comment">// 二维码宽度</span></span><br><span class="line">        request.setBizContent(bizContent.toString());</span><br><span class="line">        request.setReturnUrl(<span class="string">&quot;http://localhost:8080/frorders&quot;</span>); <span class="comment">// 支付完成后自动跳转到本地页面的路径</span></span><br><span class="line">        <span class="comment">// 执行请求，拿到响应的结果，返回给浏览器</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">form</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            form = alipayClient.pageExecute(request).getBody(); <span class="comment">// 调用SDK生成表单</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (AlipayApiException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.success(form);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/notify&quot;)</span>  <span class="comment">// 注意这里必须是POST接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">payNotify</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;trade_status&quot;</span>).equals(<span class="string">&quot;TRADE_SUCCESS&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=========支付宝异步回调========&quot;</span>);</span><br><span class="line">            Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            Map&lt;String, String[]&gt; requestParams = request.getParameterMap();</span><br><span class="line">            <span class="keyword">for</span> (String name : requestParams.keySet()) &#123;</span><br><span class="line">                params.put(name, request.getParameter(name));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sign</span> <span class="operator">=</span> params.get(<span class="string">&quot;sign&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> AlipaySignature.getSignCheckContentV1(params);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">checkSignature</span> <span class="operator">=</span> AlipaySignature.rsa256CheckContent(content, sign, aliPayConfig.getAlipayPublicKey(), <span class="string">&quot;UTF-8&quot;</span>); <span class="comment">// 验证签名</span></span><br><span class="line">            <span class="comment">// 支付宝验签</span></span><br><span class="line">            <span class="keyword">if</span> (checkSignature) &#123;</span><br><span class="line">                <span class="comment">// 验签通过</span></span><br><span class="line">                System.out.println(<span class="string">&quot;交易名称: &quot;</span> + params.get(<span class="string">&quot;subject&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;交易状态: &quot;</span> + params.get(<span class="string">&quot;trade_status&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;支付宝交易凭证号: &quot;</span> + params.get(<span class="string">&quot;trade_no&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;商户订单号: &quot;</span> + params.get(<span class="string">&quot;out_trade_no&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;交易金额: &quot;</span> + params.get(<span class="string">&quot;total_amount&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;买家在支付宝唯一id: &quot;</span> + params.get(<span class="string">&quot;buyer_id&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;买家付款时间: &quot;</span> + params.get(<span class="string">&quot;gmt_payment&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;买家付款金额: &quot;</span> + params.get(<span class="string">&quot;buyer_pay_amount&quot;</span>));</span><br><span class="line">                <span class="type">String</span> <span class="variable">tradeNo</span> <span class="operator">=</span> params.get(<span class="string">&quot;out_trade_no&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">gmtPayment</span> <span class="operator">=</span> params.get(<span class="string">&quot;gmt_payment&quot;</span>);</span><br><span class="line">                <span class="comment">// 更新订单状态为已支付，设置支付信息</span></span><br><span class="line">                <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> ordersService.selectByOrderId(tradeNo);</span><br><span class="line">                orders.setStatus(<span class="string">&quot;已支付&quot;</span>);</span><br><span class="line">                ordersService.updateById(orders);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="完善订单页面"><a href="#完善订单页面" class="headerlink" title="完善订单页面"></a>完善订单页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;main-content&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;width: 80%; background-color: white; margin: 30px auto; border-radius: 20px&quot;&gt;</span><br><span class="line">            &lt;div style=&quot;padding-bottom: 10px&quot;&gt;</span><br><span class="line">                &lt;div style=&quot;font-size: 18px; color: #000000FF; line-height: 80px; border-bottom: #cccccc 1px solid;&quot;&gt;</span><br><span class="line">                    &lt;div style=&quot;margin-left: 20px&quot;&gt;我的订单（&#123;&#123; ordersData.length &#125;&#125; 个）&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div style=&quot;margin: 20px 0; padding: 0 50px&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;table&quot;&gt;</span><br><span class="line">                        &lt;el-table :data=&quot;ordersData&quot; strip&gt;</span><br><span class="line">                            &lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">                                &lt;template slot-scope=&quot;props&quot;&gt;</span><br><span class="line">                                    &lt;el-table :data=&quot;props.row.cartData&quot; strip style=&quot;width: 90%;margin: 0 auto&quot;&gt;</span><br><span class="line">                                        &lt;el-table-column label=&quot;商品图片&quot; width=&quot;120px&quot;&gt;</span><br><span class="line">                                            &lt;template v-slot=&quot;scope&quot;&gt;</span><br><span class="line">                                                &lt;el-image style=&quot;width: 80px; height: 60px; border-radius: 3px&quot;</span><br><span class="line">                                                          v-if=&quot;scope.row.goodsImg&quot;</span><br><span class="line">                                                          :src=&quot;scope.row.goodsImg&quot;</span><br><span class="line">                                                          :preview-src-list=&quot;[scope.row.goodsImg]&quot;&gt;&lt;/el-image&gt;</span><br><span class="line">                                            &lt;/template&gt;</span><br><span class="line">                                        &lt;/el-table-column&gt;</span><br><span class="line">                                        &lt;el-table-column prop=&quot;goodsName&quot; label=&quot;商品名称&quot;</span><br><span class="line">                                                         :show-overflow-tooltip=&quot;true&quot;&gt;</span><br><span class="line">                                            &lt;template v-slot=&quot;scope&quot;&gt;</span><br><span class="line">                                                &lt;a :href=&quot;&#x27;/front/detail?id=&#x27; + scope.row.goodsId&quot;&gt;&#123;&#123; scope.row.goodsName &#125;&#125;&lt;/a&gt;</span><br><span class="line">                                            &lt;/template&gt;</span><br><span class="line">                                        &lt;/el-table-column&gt;</span><br><span class="line">                                        &lt;el-table-column prop=&quot;businessName&quot; label=&quot;店铺名称&quot;&gt;</span><br><span class="line">                                            &lt;template v-slot=&quot;scope&quot;&gt;</span><br><span class="line">                                                &lt;a :href=&quot;&#x27;/front/business?id=&#x27; + scope.row.businessId&quot;&gt;&#123;&#123; scope.row.businessName &#125;&#125;&lt;/a&gt;</span><br><span class="line">                                            &lt;/template&gt;</span><br><span class="line">                                        &lt;/el-table-column&gt;</span><br><span class="line">                                        &lt;el-table-column prop=&quot;goodsPrice&quot; label=&quot;商品价格&quot;&gt;</span><br><span class="line">                                            &lt;template v-slot=&quot;scope&quot;&gt;</span><br><span class="line">                                                &#123;&#123; scope.row.goodsPrice &#125;&#125; / &#123;&#123; scope.row.goodsUnit &#125;&#125;</span><br><span class="line">                                            &lt;/template&gt;</span><br><span class="line">                                        &lt;/el-table-column&gt;</span><br><span class="line">                                        &lt;el-table-column prop=&quot;num&quot; label=&quot;商品数量&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                                        &lt;el-table-column prop=&quot;price&quot; label=&quot;订单总价&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                                    &lt;/el-table&gt;</span><br><span class="line">                                &lt;/template&gt;</span><br><span class="line">                            &lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;orderId&quot; label=&quot;订单编号&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;num&quot; label=&quot;商品数量&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;price&quot; label=&quot;订单总价&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;username&quot; label=&quot;收货人&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;useraddress&quot; label=&quot;收货地址&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;phone&quot; label=&quot;联系电话&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column prop=&quot;status&quot; label=&quot;订单状态&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">                            &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180&quot;&gt;</span><br><span class="line">                                &lt;template v-slot=&quot;scope&quot;&gt;</span><br><span class="line">                                    &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; v-if=&quot;scope.row.status === &#x27;已完成&#x27;&quot; plain</span><br><span class="line">                                               @click=&quot;addComment(scope.row)&quot;&gt;评价</span><br><span class="line">                                    &lt;/el-button&gt;</span><br><span class="line">                                    &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; v-else-if=&quot;scope.row.status === &#x27;待付款&#x27;&quot;</span><br><span class="line">                                               plain @click=&quot;pay(scope.row.orderId)&quot;&gt;付款</span><br><span class="line">                                    &lt;/el-button&gt;</span><br><span class="line">                                    &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; v-if=&quot;scope.row.status === &#x27;待收货&#x27;&quot; plain</span><br><span class="line">                                               @click=&quot;updateStatus(scope.row, &#x27;已完成&#x27;)&quot;&gt;确认收货</span><br><span class="line">                                    &lt;/el-button&gt;</span><br><span class="line">                                    &lt;el-button size=&quot;mini&quot; type=&quot;danger&quot; plain @click=&quot;del(scope.row.id)&quot;&gt;删除</span><br><span class="line">                                    &lt;/el-button&gt;</span><br><span class="line">                                &lt;/template&gt;</span><br><span class="line">                            &lt;/el-table-column&gt;</span><br><span class="line">                        &lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;div class=&quot;pagination&quot; style=&quot;margin-top: 20px&quot;&gt;</span><br><span class="line">                            &lt;el-pagination</span><br><span class="line">                                    background</span><br><span class="line">                                    @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">                                    :current-page=&quot;pageNum&quot;</span><br><span class="line">                                    :page-sizes=&quot;[5, 10, 20]&quot;</span><br><span class="line">                                    :page-size=&quot;pageSize&quot;</span><br><span class="line">                                    layout=&quot;total, prev, pager, next&quot;</span><br><span class="line">                                    :total=&quot;total&quot;&gt;</span><br><span class="line">                            &lt;/el-pagination&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-dialog title=&quot;请输入评价内容&quot; :visible.sync=&quot;fromVisible&quot; width=&quot;40%&quot; :close-on-click-modal=&quot;false&quot;</span><br><span class="line">                   destroy-on-close&gt;</span><br><span class="line">            &lt;el-form :model=&quot;form&quot; label-width=&quot;100px&quot; style=&quot;padding-right: 50px&quot; :rules=&quot;rules&quot; ref=&quot;formRef&quot;&gt;</span><br><span class="line">                &lt;el-form-item label=&quot;评价内容&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">                    &lt;el-input type=&quot;textarea&quot; v-model=&quot;form.content&quot; placeholder=&quot;请输入评价内容&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">                &lt;/el-form-item&gt;</span><br><span class="line">            &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">                &lt;el-button @click=&quot;fromVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/el-dialog&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            user: JSON.parse(localStorage.getItem(&#x27;xm-user&#x27;) || &#x27;&#123;&#125;&#x27;),</span><br><span class="line">            ordersData: [],</span><br><span class="line">            pageNum: 1,   // 当前的页码</span><br><span class="line">            pageSize: 10,  // 每页显示的个数</span><br><span class="line">            total: 0,</span><br><span class="line">            form: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        this.loadOrders(1)</span><br><span class="line">    &#125;,</span><br><span class="line">    // methods：本页面所有的点击事件或者其他函数定义区</span><br><span class="line">    methods: &#123;</span><br><span class="line">        pay(orderId) &#123;</span><br><span class="line">            this.$request.get(`/alipay/pay?orderId=$&#123;orderId&#125;`).then(res =&gt; &#123;</span><br><span class="line">                if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">                    this.$router.push(&#123;</span><br><span class="line">                        path: &quot;/front/pay/&quot;,</span><br><span class="line">                        query: &#123;</span><br><span class="line">                            form: res.data</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.$message.error(res.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        save() &#123;</span><br><span class="line">            let data = &#123;</span><br><span class="line">                userId: this.user.id,</span><br><span class="line">                businessId: this.form.businessId,</span><br><span class="line">                goodsId: this.form.goodsId,</span><br><span class="line">                content: this.form.content,</span><br><span class="line">            &#125;</span><br><span class="line">            this.$request.post(&#x27;/comment/add&#x27;, data).then(res =&gt; &#123;</span><br><span class="line">                if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">                    this.$message.success(&#x27;评价成功&#x27;)</span><br><span class="line">                    this.fromVisible = false</span><br><span class="line">                    this.updateStatus(this.form, &#x27;已评价&#x27;)</span><br><span class="line">                    this.form = &#123;&#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.$message.error(res.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        addComment(row) &#123;</span><br><span class="line">            this.fromVisible = true</span><br><span class="line">            this.form = row</span><br><span class="line">        &#125;,</span><br><span class="line">        loadOrders(pageNum) &#123;</span><br><span class="line">            if (pageNum) this.pageNum = pageNum</span><br><span class="line">            this.$request.get(&#x27;/orders/selectPage&#x27;, &#123;</span><br><span class="line">                params: &#123;</span><br><span class="line">                    pageNum: this.pageNum,</span><br><span class="line">                    pageSize: this.pageSize,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).then(res =&gt; &#123;</span><br><span class="line">                if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">                    this.ordersData = res.data?.list</span><br><span class="line">                    this.total = res.data?.total</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.$message.error(res.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        navTo(url) &#123;</span><br><span class="line">            location.href = url</span><br><span class="line">        &#125;,</span><br><span class="line">        del(id) &#123;</span><br><span class="line">            this.$request.delete(&#x27;/orders/delete/&#x27; + id).then(res =&gt; &#123;</span><br><span class="line">                if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">                    this.$message.success(&#x27;删除成功&#x27;)</span><br><span class="line">                    this.loadOrders(1)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.$message.error(res.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        handleCurrentChange(pageNum) &#123;</span><br><span class="line">            this.loadOrders(pageNum)</span><br><span class="line">        &#125;,</span><br><span class="line">        updateStatus(row, status) &#123;</span><br><span class="line">            this.form = row</span><br><span class="line">            this.form.status = status</span><br><span class="line">            this.$request.put(&#x27;/orders/update&#x27;, this.form).then(res =&gt; &#123;</span><br><span class="line">                if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">                    this.$message.success(&#x27;操作成功&#x27;)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.$message.error(res.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="编写支付页面Pay-vue"><a href="#编写支付页面Pay-vue" class="headerlink" title="编写支付页面Pay.vue"></a>编写支付页面Pay.vue</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 支付宝支付界面 --&gt;</span><br><span class="line">    &lt;div class=&quot;ali-pay box-shadow mt-4 border-radius&quot; v-loading=&quot;flag&quot;&gt;</span><br><span class="line">        &lt;div v-html=&quot;payInfo&quot; ref=&quot;pay&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            payInfo: &quot;&quot;,</span><br><span class="line">            flag: true</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        this.$loading(true);</span><br><span class="line">        this.payInfo = this.$route.query.form</span><br><span class="line">        this.$nextTick(() =&gt; &#123;</span><br><span class="line">            this.$refs.pay.children[0].submit();</span><br><span class="line">            setTimeout(() =&gt; &#123;</span><br><span class="line">                this.flag = false</span><br><span class="line">            &#125;,1000)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style &gt;</span><br><span class="line">.ali-pay &#123;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">path</span>: <span class="string">&#x27;pay&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;Pay&#x27;</span>, <span class="attr">meta</span>: &#123; <span class="attr">name</span>: <span class="string">&#x27;支付页面&#x27;</span> &#125;, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../views/front/Pay&#x27;</span>) &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
